{"version":3,"sources":["core/derive.js","events/EventPhase.js","events/Event.js","events/EventListener.js","events/EventDispatcher.js","core/timing.js","view/ScrollDirection.js","view/Sprite.js","view/ScrollContainer.js","page/PageBase.js","express.js"],"names":["derive","base","ctor","newProps","Object","create","prototype","oldProps","itList","getOwnPropertyNames","itResult","i","length","getOwnPropertyDescriptor","defineProperties","EventPhase","Error","Event","type","bubbles","cancelable","this","_type","_bubbles","_cancelable","_target","_currentTarget","_eventPhase","NONE","_defaultPrevented","_needStopPropagation","_needStopImmediatePropagation","EventListener","handler","priority","_handler","_priority","EventDispatcher","target","_dispatcherCaptureRegister","_dispatcherBubbleRegister","_dispatcherRelatedTarget","timeNow","__TIMER_OBJ__","__TIMER_KEY__","ScrollDirection","value","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","get","currentTarget","eventPhase","defaultPrevented","preventDefault","stopPropagation","stopImmediatePropagation","handleEvent","event","call","addEventListener","listener","useCapture","removeEventListener","sortedList","push","len","splice","hasEventListener","hasOwnProperty","willTrigger","tempToken","parent","dispatchEvent","_dispatchEvent","tempChain","selfIndex","selfChain","concat","Sprite","selector","_element","$","_scaleX","_scaleY","_rotation","_translateX","_translateY","_hrwAccelEnabled","reg","element","natural","hrwAccelEnabled","set","width","clientWidth","height","clientHeight","x","_applyTransform","y","scaleX","scaleY","rotation","_setTransform","transform","style","webkitTransform","SPID_POINTER","SPID_DICTION","sprite","setAttribute","spid","getAttribute","cls","requestAnimation","window","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimation","cancelAnimationFrame","webkitCancelAnimationFrame","performance","now","webkitNow","Date","X_AXIS","Y_AXIS","Z_AXIS","XY_AXIS","XZ_AXIS","YZ_AXIS","LEFT","RIGHT","UP","DOWN","IN","OUT","ScrollContainer","_content","children","_scrollX","_scrollY","_bounces","_scrollXEnabled","_scrollYEnabled","_scrollXIndicator","_scrollYIndicator","_scrollXTracker","_scrollYTracker","_disableIndicator","_resizeIndicator","_lockAtDir","_startXval","_startYval","_speedXval","_speedYval","_amplsXval","_amplsYval","_touchXval","_touchYval","_targtXval","_targtYval","_velocXval","_velocYval","_distsXval","_distsYval","_forceXval","_forceYval","_edgesXval","_edgesYval","_tickerInt","_timestamp","_pullstamp","_scrollInt","_pullbkInt","_bounceInt","_threshold","_timedelay","_amplsFactor","_timeConstant","_elasticFactor","_bouncesFactor","_timePullFactor","_forceDamping","_speedThreshold","_maxEdgeBounces","_dragDetection","_doAutoScroll","bind","_doPullback","_doForceBounces","_doScrollTo","_calcTouchesSpeed","_calcTouchesPosition","_drawScrollContainer","_initScrollContainer","scrollX","_drawScrollPosition","scrollY","bounces","disableIndicator","resizeIndicator","scrollWidth","Math","max","scrollHeight","contentWidth","contentHeight","scrollXEnabled","scrollYEnabled","content","threshold","_setScrollPosition","_setupTouchEvents","isSetup","evt","dt","_hasTouched","movedXval","movedYval","doPrevent","abs","_showIndicator","doPullXs","doPullYs","doScroll","dragEvent","vx","vy","elapsed","deltaXval","deltaYval","_getAverageOfTouches","touches","clientX","clientY","count","fact","exp","dist","next","bounce","declsX","declsY","scrollTo","time","_stopAllDelayTimer","alpha","_createIndicator","_updateIndicator","classList","remove","add","document","createElement","className","appendChild","scale","percent","flowX","min","flowY","PageBase","disableContainer","body","_appConfigParam","domain","_mainContainer","Page"],"mappings":"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","file":"express.js","sourcesContent":["/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction derive( base, ctor ) {\r\n    /// <summary>\r\n    /// 使用 JS 中的原型链，创建类型之间的扩展与继承。</summary>\r\n    /// <param name='base' type='Function'>\r\n    /// 必须，指定被扩展基类。注：该参数可以为 null。</param>\r\n    /// <param name='ctor' type='Function'>\r\n    /// 必须，指定从基类继承的子类。</param>\r\n    /// <returns type='Function'>\r\n    /// 返回对子类的引用。</returns>\r\n\r\n    if ( typeof base != \"function\" ) {\r\n        /// 如果提供的基类不是一个可扩展的对象，则函数不做任何修改。默认 ctor 为 Object 的子类。\r\n        return;\r\n    }\r\n\r\n    var newProps = Object.create(base.prototype);\r\n    var oldProps = ctor.prototype;\r\n\r\n    /// 覆盖子类的原型对象之前（Prototype），需要保存子类的原型对象（Prototype）。\r\n    /// 然后在覆盖之后，将保存的原型对象上的属性和方法添加到新的原型对象中。\r\n    /// 这样不会导致方法或者属性再应用原型继承后丢失。\r\n    var itList = Object.getOwnPropertyNames(oldProps);\r\n    var itResult = {};\r\n\r\n    for ( var i = 0; i < itList.length; ++i ) {\r\n        itResult[itList[i]] = Object.getOwnPropertyDescriptor(oldProps, itList[i]);\r\n    }\r\n\r\n    ctor.prototype = newProps;\r\n    Object.defineProperties(ctor.prototype, itResult);\r\n\r\n    return ctor;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction EventPhase() {\r\n    /// <summary>\r\n    /// 定义描述事件阶段的常量。</summary>\r\n\r\n    throw new Error(\"无法创建常量枚举类型的实例。\");\r\n}\r\n\r\n\r\nObject.defineProperties(EventPhase, {\r\n    /// <field type='UInt8'>\r\n    /// 定义事件初始状态常量。</field>\r\n    NONE           : { value: 0x00 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件捕获阶段状态常量。</field>\r\n    CAPTURING_PHASE: { value: 0x01 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件目标阶段状态常量。</field>\r\n    AT_TARGET      : { value: 0x02 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件冒泡阶段状态常量。</field>\r\n    BUBBLING_PHASE : { value: 0x03 }\r\n});\r\n","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='./EventPhase.js' />\r\n\r\n\r\nfunction Event( type, bubbles, cancelable ) {\r\n    /// <summary>\r\n    /// 定义一个自定义的事件对象。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='bubbles' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指定该事件是否为冒泡型事件。</param>\r\n    /// <param name='cancelable' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指定该事件是否可以由侦听器取消相关的默认行为。</param>\r\n\r\n    /// <field type='String'>\r\n    /// 事件的类型。</field>\r\n    this._type = type;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否参与冒泡。</field>\r\n    this._bubbles = bubbles;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否可取消默认行为。</field>\r\n    this._cancelable = cancelable;\r\n\r\n    /// <field type='EventDispatcher'>\r\n    /// 该事件起始目标对象。</field>\r\n    this._target = null;\r\n\r\n    /// <field type='EventDispatcher'>\r\n    /// 该事件当前目标对象。</field>\r\n    this._currentTarget = null;\r\n\r\n    /// <field type='UInt8'>\r\n    /// 该事件当前状态。</field>\r\n    this._eventPhase = EventPhase.NONE;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否已经取消了默认行为。</field>\r\n    this._defaultPrevented = false;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否应该在调度完当前节点后停止调度。</field>\r\n    this._needStopPropagation = false;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否应该立刻停止调度，当前节点的后续侦听器以及后续所有节点的侦听器都不会收到该事件。</field>\r\n    this._needStopImmediatePropagation = false;\r\n}\r\n\r\n\r\nObject.defineProperties(Event.prototype, {\r\n    /// <value type='String'>\r\n    /// 获取事件类型。</value>\r\n    type: {\r\n        get: function () { return this._type; }\r\n    },\r\n\r\n    /// <value type='String'>\r\n    /// 获取该事件是否参与冒泡。</value>\r\n    bubbles: {\r\n        get: function () { return this._bubbles; }\r\n    },\r\n\r\n    /// <value type='Boolean'>\r\n    /// 获取该事件是否可以取消默认行为。</value>\r\n    cancelable: {\r\n        get: function () { return this._cancelable; }\r\n    },\r\n\r\n    /// <value type='EventTarget'>\r\n    /// 获取事件的起始目标对象。</value>\r\n    target: {\r\n        get: function () { return this._target; }\r\n    },\r\n\r\n    /// <value type='EventTarget'>\r\n    /// 获取事件的当前目标对象。</value>\r\n    currentTarget: {\r\n        get: function () { return this._currentTarget; }\r\n    },\r\n\r\n    /// <value type='UInt8'>\r\n    /// 获取事件当前状态。</value>\r\n    eventPhase: {\r\n        get: function () { return this._eventPhase; }\r\n    },\r\n\r\n    /// <value type='Boolean'>\r\n    /// 指示该事件是否已经取消了默认行为。</value>\r\n    defaultPrevented: {\r\n        get: function () { return this._defaultPrevented; }\r\n    }\r\n});\r\n\r\n\r\nEvent.prototype.preventDefault = function preventDefault() {\r\n    /// <summary>\r\n    /// 取消该事件相关的默认行为。</summary>\r\n\r\n    if ( this._cancelable ) {\r\n        this._defaultPrevented = true;\r\n    }\r\n}\r\n\r\n\r\nEvent.prototype.stopPropagation = function stopPropagation() {\r\n    /// <summary>\r\n    /// 停止该传递事件，事件目标的后续节点将不会收到该事件。</summary>\r\n\r\n    this._needStopPropagation = true;\r\n}\r\n\r\n\r\nEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\r\n    /// <summary>\r\n    /// 立刻停止传递该事件，事件的后续侦听器以及事件目标后续所有节点都不会收到该事件。</summary>\r\n\r\n    this._needStopPropagation = true;\r\n    this._needStopImmediatePropagation = true;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction EventListener( handler, priority ) {\r\n    /// <summary>\r\n    /// 创建一个事件侦听器对象。\r\n    /// 说明：参数 `handler` 可以是一个 Function 类型的对象，或者是一个具有 `handleEvent()` 方法的\r\n    /// Object 类型的对象。</summary>\r\n    /// <param name='handler' type='Function'>\r\n    /// 必须，指定事件处理函数或者事件处理对象。</param>\r\n    /// <param name='priority' type='UInt32' optional='true'>\r\n    /// 可选，默认值：0。指定该侦听器的优先级。</param>\r\n\r\n    /// <field type='Function'>\r\n    /// 该侦听器的处理函数。</field>\r\n    this._handler = handler;\r\n\r\n    /// <field type='UInt32'>\r\n    /// 指示该侦听器的优先级。</field>\r\n    this._priority = priority || 0;\r\n}\r\n\r\n\r\nObject.defineProperties(EventListener.prototype, {\r\n    /// <filed type='UInt8'>\r\n    /// 获取该侦听器的优先级。</field>\r\n    priority: {\r\n        get: function () { return this._priority; }\r\n    },\r\n\r\n    /// <field type='Function'>\r\n    /// 获取事件处理函数对象。</field>\r\n    handler: {\r\n        get: function () { return this._handler; }\r\n    }\r\n});\r\n\r\n\r\nEventListener.prototype.handleEvent = function handleEvent( event ) {\r\n    /// <summary>\r\n    /// 调用并执行事件处理函数。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，传递给事件处理函数的事件对象。</param>\r\n    /// <returns type='*'>\r\n    /// 返回事件处理函数的返回值。</returns>\r\n\r\n    if ( typeof this._handler == \"function\" ) {\r\n        /// 1，对于 Function 类型的处理函数，将该 Function 中的 this 指向事件的 currentTarget 属性。\r\n        /// 然后执行该函数。\r\n        \r\n        return this._handler.call(event.currentTarget, event);\r\n    }\r\n\r\n    /// 2，对于 Object.handleEvent 类型的事件处理对象。\r\n    /// 则可以直接调用该对象的 `handleEvent()` 方法并返回处理结果。\r\n    return this._handler.handleEvent(event);\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='./Event.js' />\r\n/// <reference path='./EventPhase.js' />\r\n/// <reference path='./EventListener.js' />\r\n\r\n\r\nfunction EventDispatcher( target ) {\r\n    /// <summary>\r\n    /// 定义具备事件调度功能的类型的基类。</summary>\r\n    /// <param name='target' type='Object' optional='true'>\r\n    /// 可选，默认值：null。指示该调度器使用的事件目标对象。</param>\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该调度器中捕获阶段的所有侦听器寄存对象。</field>\r\n    this._dispatcherCaptureRegister = {};\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该调度器中冒泡阶段的所有的侦听器。</field>\r\n    this._dispatcherBubbleRegister  = {};\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该侦听器的事件目标对象。</field>\r\n    this._dispatcherRelatedTarget   = target || this;\r\n}\r\n\r\n\r\nEventDispatcher.prototype.addEventListener = function addEventListener( type, listener, useCapture, priority ) {\r\n    /// <summary>\r\n    /// 为当前对象注册指定类型的事件侦听器。\r\n    /// 说明：\r\n    ///     1，参数 `listener` 可以是一个 Function 类型的对象，或者是具有 `handleEvent()` 方法的 Object 类型的对象。\r\n    ///     2，使用不同的 `useCapture`（分别使用 true 和 false 值），但使用同一侦听器注册事件时，将注册为不同阶段的事件处理器。\r\n    ///     3，在事件调度过程中，优先级高的侦听器会比优先级低的侦听器更早执行。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='listener' type='Function'>\r\n    /// 必须，指定事件侦听器。</param>\r\n    /// <param name='useCapture' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指示该侦听器是否在捕获阶段处理事件。</param>\r\n    /// <param name='priority' type='UInt32' optional='true'>\r\n    /// 可选，默认值：0。指示该侦听器的优先级。</param>\r\n\r\n    /// TODU: 防止相同的事件侦听器被重复注册。\r\n    this.removeEventListener(type, listener, useCapture);\r\n\r\n\r\n    /// TODU: 为该类型的事件创建一个寄存列表。\r\n    if ( !this._dispatcherCaptureRegister[type] ) {\r\n        this._dispatcherCaptureRegister[type] = [];\r\n    }\r\n\r\n    if ( !this._dispatcherBubbleRegister[type] ) {\r\n        this._dispatcherBubbleRegister[type] = [];\r\n    }\r\n\r\n    /// TODU: 获取侦听器列表，并将该侦听器按优先级顺序添加进列表中。\r\n    var sortedList = useCapture ? this._dispatcherCaptureRegister[type] : this._dispatcherBubbleRegister[type];\r\n    var listener = new EventListener(listener, priority);\r\n    \r\n    if ( (!sortedList.length) || \r\n         (listener.priority <= sortedList[sortedList.length - 1].priority) ) {\r\n        /// 通常注册事件都是使用默认的优先级值 0，按照排序规则高优先级在前，低优先级在后。这种类型的注册只需要\r\n        /// 将后添加的侦听器直接 push 到队列的末尾。\r\n\r\n        sortedList.push(listener);\r\n    }\r\n\r\n    else {\r\n        /// 将优先级高的侦听器放置在队列的前面。\r\n        for ( var i = 0, len = sortedList.length; i < len; ++i ) {\r\n            if ( listener.priority > sortedList[i].priority ) {\r\n                sortedList.splice(i, 0, listener);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nEventDispatcher.prototype.removeEventListener = function removeEventListener( type, listener, useCapture ) {\r\n    /// <summary>\r\n    /// 删除指定类型的事件侦听器。\r\n    /// 说明：如果事件侦听器是通过不同的 `useCapture` 值注册的，需要使用对应的 `useCapture` 来删除该侦听器。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='listener' type='Function'>\r\n    /// 必须，指定事件侦听器。</param>\r\n    /// <param name='useCapture' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指示该侦听器是否在捕获阶段处理事件。</param>\r\n\r\n    var sortedList = (useCapture ? this._dispatcherCaptureRegister[type] : this._dispatcherBubbleRegister[type]);\r\n\r\n    /// TODU: 删除事件侦听器时，必须完全相等才执行删除操作。\r\n    if ( sortedList && sortedList.length ) {\r\n        for ( var i = 0, len = sortedList.length; i < len; ++i ) {\r\n            if ( listener === sortedList[i].handler ) {\r\n                sortedList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nEventDispatcher.prototype.hasEventListener = function hasEventListener( type ) {\r\n    /// <summary>\r\n    /// 检查当前对象是否为指定类型的事件注册了任何该类型的侦听器。</summary>\r\n    /// <returns type='Boolean'>\r\n    /// 如果当前对象中存在该类型事件的侦听器，则返回 true，否则返回 false。</returns>\r\n\r\n    return (this._dispatcherCaptureRegister.hasOwnProperty(type) && this._dispatcherCaptureRegister[type].length >= 1)\r\n        || (this._dispatcherBubbleRegister .hasOwnProperty(type) && this._dispatcherBubbleRegister [type].length >= 1);\r\n}\r\n\r\n\r\nEventDispatcher.prototype.willTrigger = function willTrigger( type ) {\r\n    /// <summary>\r\n    /// 检测当前对象以及当前对象的传递路径中是否为指定事件类型注册了任何该类型的侦听器。</summary>\r\n    /// <returns type='Boolean'>\r\n    /// 如果存在该类型的侦听器，则返回 true。否则返回 false。</returns>\r\n\r\n    if ( this.hasEventListener(type) ) {\r\n        return true;\r\n    }\r\n\r\n    for ( var tempToken; tempToken = tempToken.parent; ) {\r\n        if ( tempToken.hasEventListener(type) ) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nEventDispatcher.prototype.dispatchEvent = function dispatchEvent( event ) {\r\n    /// <summary>\r\n    /// 调度一个事件到当前对象的事件流中。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，指定被调度到事件流中的事件对象。</param>\r\n    /// <returns type='Boolean'>\r\n    /// 当事件传递完成时，如果没取消默认行为。则返回 true，否则返回 false。\r\n    /// 补充说明：\r\n    ///     1，如果事件在传递过程中被中断，则返回 false 值。\r\n    ///     2，如果事件不参与冒泡行为并且没有被取消默认行为，则返回 true 值。</returns>\r\n\r\n    if ( event.eventPhase !== EventPhase.NONE ) {\r\n        /// 该事件已经被调度过一次时，抛出状态异常。\r\n        throw new Error(\"无效的事件对象。\");\r\n    }\r\n\r\n    if ( !event.bubbles || !this.parent ) {\r\n        /// TODU: 事件不参与冒泡行为，则直接在目标阶段调度。\r\n        event._target        = this._dispatcherRelatedTarget;\r\n        event._currentTarget = this._dispatcherRelatedTarget;\r\n        event._eventPhase    = EventPhase.AT_TARGET;\r\n\r\n        this._dispatchEvent( event );\r\n        return !event.defaultPrevented;\r\n    }\r\n\r\n    /// TODU: 构建事件传递路径。\r\n    var tempChain = [];\r\n    var tempToken = this;\r\n\r\n    for ( ;tempToken = tempToken.parent; ) {\r\n        tempChain.push( tempToken );\r\n    }\r\n\r\n    var selfIndex = tempChain.length;\r\n    var selfChain = [];\r\n\r\n    /// 1，捕获阶段（EventPhase.CAPTURING_PHASE）。\r\n    for ( var i = tempChain.length - 1; i >= 0; --i ) {\r\n        selfChain.push(tempChain[i]);\r\n    }\r\n\r\n    /// 2，冒泡阶段（EventPhase.AT_TARGET）。\r\n    selfChain.push(this);\r\n\r\n    /// 3，冒泡阶段（EventPhase.BUBBLING_PHASE）。\r\n    for ( var i = 0; i < tempChain.length; ++i ) {\r\n        selfChain.push(tempChain[i]);\r\n    }\r\n\r\n    /// TODU: 调度事件至事件流中。\r\n    for ( var i = 0; i < selfChain.length && !event._needStopPropagation; ++i ) {\r\n        /// 更新事件目标以及状态；\r\n        event._target = this._dispatcherRelatedTarget;\r\n        event._currentTarget = selfChain[i]._dispatcherRelatedTarget;\r\n        event._eventPhase = (selfIndex == i ? EventPhase.AT_TARGET : selfIndex < i ? EventPhase.BUBBLING_PHASE : EventPhase.CAPTURING_PHASE);\r\n\r\n        selfChain[i]._dispatchEvent(event);\r\n    }\r\n\r\n    return !event.defaultPrevented && !event._needStopPropagation;\r\n}\r\n\r\n\r\nEventDispatcher.prototype._dispatchEvent = function _dispatchEvent( event ) {\r\n    /// <summary>\r\n    /// 为指定状态的事件调用注册的侦听器来处理该事件。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，指定调用侦听器的事件对象。</param>\r\n\r\n    var sortedList = [];\r\n    /// WARING：在调用侦听器时，不能直接使用原始的寄存数组，因为在调用侦听器函数内部如果调用了删除事件侦听器的方法。\r\n    /// 如 `removeEventListener()`，原始的寄存数组会被修改。这将导致后续其他侦听器的调用发生不可预知的状况。\r\n\r\n    /// TODU: 捕获阶段仅触发 `_dispatcherCaptureRegister` 寄存对象中的侦听器。\r\n    if ( event.eventPhase == EventPhase.CAPTURING_PHASE ) {\r\n        sortedList = sortedList.concat(this._dispatcherCaptureRegister[event.type] || []);\r\n    }\r\n\r\n    /// TODU: 目标阶段触发所有（`_dispatcherCaptureRegister` 和 `_dispatcherBubbleRegister`）的侦听器。\r\n    if ( event.eventPhase == EventPhase.AT_TARGET ) {\r\n        sortedList = sortedList.concat(this._dispatcherCaptureRegister[event.type] || []);\r\n        sortedList = sortedList.concat(this._dispatcherBubbleRegister [event.type] || []);\r\n    }\r\n\r\n    /// TODU: 冒泡阶段仅触发 `_dispatcherBubbleRegister` 寄存对象中的侦听器。\r\n    if ( event.eventPhase == EventPhase.BUBBLING_PHASE ) {\r\n        sortedList = sortedList.concat(this._dispatcherBubbleRegister [event.type] || []);\r\n    }\r\n\r\n    /// TODU: 遍历并执行当前列出的所有的侦听器。\r\n    for ( var i = 0; i < sortedList.length && !event._needStopImmediatePropagation; ++i ) {\r\n        sortedList[i].handleEvent( event );\r\n    }\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\n/// <var type='Function'>\r\n/// 启动一个同步页面的计时器。</var>\r\nvar requestAnimation = window.requestAnimationFrame \r\n                     || window.webkitRequestAnimationFrame;\r\n\r\n/// <var type='Function'>\r\n/// 取消一个同步页面的计时器。</var>\r\nvar cancelAnimation  = window.cancelAnimationFrame\r\n                     || window.webkitCancelAnimationFrame;\r\n\r\n\r\nvar __TIMER_OBJ__ = null;\r\nvar __TIMER_KEY__ = null;\r\n\r\n\r\nif ( window.performance ) {\r\n    if ( typeof window.performance.now == \"function\" ) {\r\n        __TIMER_OBJ__ = window.performance;\r\n        __TIMER_KEY__ = \"now\";\r\n    }\r\n\r\n    else if ( typeof window.performance.webkitNow == \"function\" ) {\r\n        __TIMER_OBJ__ = window.performance;\r\n        __TIMER_KEY__ = \"webkitNow\";\r\n    }\r\n}\r\n\r\n\r\nif ( !__TIMER_OBJ__ || !__TIMER_KEY__ ) {\r\n    __TIMER_OBJ__ = Date;\r\n    __TIMER_KEY__ = \"now\";\r\n}\r\n\r\n\r\nfunction timeNow() {\r\n    /// <summary>\r\n    /// 获取系统当前时间戳（浮点数）。</summary>\r\n\r\n    return __TIMER_OBJ__[__TIMER_KEY__]();\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\n\r\nfunction ScrollDirection () {\r\n    /// <summary>\r\n    /// 定义滚动方向常量。</summary>\r\n\r\n    throw new Error(\"无法创建静态类型的实例。\");\r\n}\r\n\r\n\r\nObject.defineProperties(ScrollDirection, {\r\n    /// 空值\r\n    NONE  : { value: 0x00 },\r\n\r\n    /// 轴\r\n    X_AXIS: { value: 0x01 },\r\n    Y_AXIS: { value: 0x02 },\r\n    Z_AXIS: { value: 0x03 },\r\n\r\n    /// XY\r\n    XY_AXIS: { value: 0x04 },\r\n    XZ_AXIS: { value: 0x05 },\r\n    YZ_AXIS: { value: 0x06 },\r\n\r\n    /// 方向\r\n    LEFT : { value: 0x10 },\r\n    RIGHT: { value: 0x11 },\r\n    UP   : { value: 0x12 },\r\n    DOWN : { value: 0x13 },\r\n    IN   : { value: 0x14 },\r\n    OUT  : { value: 0x15 }\r\n});","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../events/Event.js' />\r\n/// <reference path='../events/EventDispatcher.js' />\r\n\r\n\r\nvar Sprite = derive(EventDispatcher, function Sprite( selector ) {\r\n    /// <summary>\r\n    /// 显示对象基类，提供额外的 CSS 属性获取/设置。</summary>\r\n    /// <param name='selector' type='String'>\r\n    /// 必须，指定创建该类的 DOM 元素的 Zepto 选择器。</param>\r\n    EventDispatcher.call(this);\r\n\r\n    this._element = $(selector);\r\n    this._scaleX = 1;\r\n    this._scaleY = 1;\r\n    this._rotation   = 0;\r\n    this._translateX = 0;\r\n    this._translateY = 0;\r\n    this._hrwAccelEnabled = true;\r\n\r\n    if ( this._element.length != 1 ) {\r\n        throw new Error(\"当前选择器选中了零个或多个元素，但 Sprite 必须且只能包含有一个有效的元素。\");\r\n    }\r\n\r\n    Sprite.reg(this);\r\n});\r\n\r\n\r\nObject.defineProperties(Sprite.prototype, {\r\n    /// <field type='Zepto'>\r\n    /// 获取显示对象的 Zepto 元素。</field>\r\n    element: {\r\n        get: function () { return this._element; }\r\n    },\r\n\r\n    /// <field type='HTMLElement'>\r\n    /// 获取显示对象的 DOM 元素。</field>\r\n    natural: {\r\n        get: function () { return this._element[0]; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否启用 3d 加速渲染变换矩阵。<field>\r\n    hrwAccelEnabled: {\r\n        get: function () { return this._hrwAccelEnabled; },\r\n        set: function( value ) { this._hrwAccelEnabled = value; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取元素的宽度。</field>\r\n    width: {\r\n        get: function () { return this.natural.clientWidth; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取元素的高度。</field>\r\n    height: {\r\n        get: function () { return this.natural.clientHeight; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 x 轴坐标。</field>\r\n    x: {\r\n        get: function () { return this._translateX; },\r\n        set: function( value ) { \r\n            this._translateX = value; \r\n            this._applyTransform(); \r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 y 轴坐标。</field>\r\n    y: {\r\n        get: function () { return this._translateY; },\r\n        set: function( value ) {\r\n            this._translateY = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 x 轴缩放量。</field>\r\n    scaleX: {\r\n        get: function () { return this._scaleX; },\r\n        set: function( value ) {\r\n            this._scaleX = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 y 轴缩放量。</field>\r\n    scaleY: {\r\n        get: function () { return this._scaleY; },\r\n        set: function( value ) {\r\n            this._scaleY = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的旋转角度。</field>\r\n    rotation: {\r\n        get: function () { return this._rotation; },\r\n        set: function( value ) {\r\n            this._rotation = value;\r\n            this._applyTransform();\r\n        }\r\n    }\r\n});\r\n\r\n\r\nSprite.prototype._applyTransform = function _applyTransform () {\r\n    /// <summary>\r\n    /// 对元素应用变换矩阵。</summary>\r\n    this._setTransform(\r\n        'scale(' + this._scaleX + ',' + this._scaleY + ')' +\r\n        'rotate(' + this._rotation + 'deg)' +\r\n        'translateX(' + this._translateX + 'px)' +\r\n        'translateY(' + this._translateY + 'px)' + (this._hrwAccelEnabled ? 'translateZ(0px)' : '')\r\n    );\r\n}\r\n\r\n\r\nSprite.prototype._setTransform = function _setTransform( transform ) {\r\n    /// <summary>\r\n    /// 设置元素 transform 样式。</summary>\r\n    /// <param name='transform' type='String'>\r\n    /// 必须，指定元素的 transform 属性值。</param>\r\n\r\n    this.natural.style.transform = \r\n    this.natural.style.webkitTransform = transform;\r\n}\r\n\r\n\r\nSprite.prototype.transform = function transform( x, y, scaleX, scaleY, rotation ) {\r\n    /// <summary>\r\n    /// 同时设置多个 transform 属性值。</summary>\r\n    /// <param name='x' type='Number' optional='true'>\r\n    /// 可选，设置元素在 x 轴上的偏移量。</param>\r\n    /// <param name='y' type='Number' optional='true'>\r\n    /// 可选，设置元素在 y 轴上的偏移量。</param>\r\n    /// <param name='scaleX' type='Number' optional='true'>\r\n    /// 可选，设置元素在 x 轴上的缩放量。</param>\r\n    /// <param name='scaleY' type='Number' optional='true'>\r\n    /// 可选，设置元素在 y 轴上的缩放量。</param>\r\n    /// <param name='rotation' type='Number' optional='true'>\r\n    /// 可选，设置元素的旋转角度。</param>\r\n\r\n    if ( x        !== null && typeof x        != \"undefined\" ) { this._translateX = x; }\r\n    if ( y        !== null && typeof y        != \"undefined\" ) { this._translateY = y; }\r\n    if ( scaleX   !== null && typeof scaleX   != \"undefined\" ) { this._scaleX     = scaleX; }\r\n    if ( scaleY   !== null && typeof scaleY   != \"undefined\" ) { this._scaleY     = scaleY; }\r\n    if ( rotation !== null && typeof rotation != \"undefined\" ) { this._rotation   = rotation; }\r\n\r\n    this._applyTransform();\r\n}\r\n\r\n\r\n/// ================================================================================\r\n/// SPID \r\n/// ================================================================================\r\nvar SPID_POINTER = 0;\r\nvar SPID_DICTION = {};\r\n\r\n\r\nSprite.reg = function reg( sprite ) {\r\n    /// <summary>\r\n    /// 注册 Sprite 类型的实例，以便通过 Sprite.get() 获取实例的引用。</summary>\r\n    /// <param name='sprite' type='Sprite'>\r\n    /// 必须，指定注册到引用池中的 Sprite 类型的实例。</param>\r\n    /// <returns type='Sprite'>\r\n    /// 返回对 Sprite 实例的引用。</returns>\r\n\r\n    if ( !(sprite instanceof Sprite) ) {\r\n        throw new Error(\"Sprite: reg() 方法的注册对象必须为 Sprite 类型的实例。\");\r\n    }\r\n\r\n    SPID_DICTION[SPID_POINTER] = sprite;\r\n    sprite.natural.setAttribute(\"data-sprite\", SPID_POINTER++);\r\n\r\n    return sprite;\r\n}\r\n\r\n\r\nSprite.get = function get( spid ) {\r\n    /// <summary>\r\n    /// 通过 SPID 获取引用池中指定的 Sprite 实例对象。<br/>\r\n    /// 支持以下方式：                  <br/>\r\n    ///     Sprite.get('spid');       <br/>\r\n    ///     Sprite.get(HTMLElement);  <br/>\r\n    ///     Sprite.get(Zepto);</summary>\r\n    /// <param name='spid' type='String'>\r\n    /// 必须，指定 Sprite 的 spid 值。可以是 String|HTMLElement|ZeptoElement。</param>\r\n\r\n    if ( spid === null || typeof spid == \"undefined\" ) {\r\n\r\n        return null;\r\n    }\r\n\r\n    if ( typeof spid == \"object\" ) {\r\n\r\n        if ( typeof spid.getAttribute == \"function\" ) {\r\n\r\n            return SPID_DICTION[spid.getAttribute(\"data-sprite\")] || null;\r\n        }\r\n\r\n        else {\r\n\r\n            return SPID_DICTION[spid[0].getAttribute(\"data-sprite\")] || null;\r\n        }\r\n    }\r\n\r\n    return SPID_DICTION[\"\" + spid] || null;\r\n}\r\n\r\n\r\nSprite.cls = function cls( spid ) {\r\n    /// <summary>\r\n    /// 通过 SPID 删除引用池中指定的 Sprite 实例对象。<br/>\r\n    /// 支持以下方式：                  <br/>\r\n    ///     Sprite.cls('spid');       <br/>\r\n    ///     Sprite.cls(HTMLElement);  <br/>\r\n    ///     Sprite.cls(Zepto);</summary>\r\n    /// <param name='spid' type='String'>\r\n    /// 必须，指定 Sprite 的 spid 值。可以是 String|HTMLElement|ZeptoElement。</param>\r\n\r\n    if ( spid === null || typeof spid == \"undefined\" ) {\r\n        \r\n        return;\r\n    }\r\n\r\n    if ( spid instanceof Sprite ) {\r\n\r\n        SPID_DICTION[spid.natural.getAttribute(\"data-sprite\")] = null;\r\n        return;\r\n    }\r\n\r\n    if ( typeof spid == \"object\" ) {\r\n\r\n        if ( typeof spid.getAttribute == \"function\" ) {\r\n\r\n            SPID_DICTION[spid.getAttribute(\"data-sprite\")] = null;\r\n        }\r\n\r\n        else {\r\n\r\n            SPID_DICTION[spid[0].getAttribute(\"data-sprite\")] = null;\r\n        }\r\n    }\r\n\r\n    SPID_DICTION[\"\" + spid] = null;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../core/timing.js' />\r\n/// <reference path='../events/Event.js' />\r\n/// <reference path='./Sprite.js' />\r\n/// <reference path='./ScrollDirection.js' />\r\n\r\n\r\nvar ScrollContainer = derive(Sprite, function ScrollContainer( selector ) {\r\n    /// <summary>\r\n    /// 自定义滚动容器。</summary>\r\n    Sprite.call(this, selector);\r\n\r\n    this._content = new Sprite(this._element.children(\"content\"));\r\n    this._scrollX = 0;\r\n    this._scrollY = 0;\r\n    this._bounces = true;\r\n    this._scrollXEnabled = false;\r\n    this._scrollYEnabled = true;\r\n    this._scrollXIndicator = null;\r\n    this._scrollYIndicator = null;\r\n    this._scrollXTracker = null;\r\n    this._scrollYTracker = null;\r\n    this._disableIndicator = false;\r\n    this._resizeIndicator  = true;\r\n\r\n    this._lockAtDir = ScrollDirection.NONE;\r\n    this._startXval = 0;\r\n    this._startYval = 0;\r\n    this._speedXval = 0;\r\n    this._speedYval = 0;\r\n    this._amplsXval = 0;\r\n    this._amplsYval = 0;\r\n    this._touchXval = 0;\r\n    this._touchYval = 0;\r\n    this._targtXval = 0;\r\n    this._targtYval = 0;\r\n    this._velocXval = 0;\r\n    this._velocYval = 0;\r\n    this._distsXval = 0;\r\n    this._distsYval = 0;\r\n    this._forceXval = 0;\r\n    this._forceYval = 0;\r\n    this._edgesXval = 0;\r\n    this._edgesYval = 0;\r\n    this._tickerInt = 0;\r\n    this._timestamp = 0;\r\n    this._pullstamp = 0;\r\n    this._scrollInt = 0;\r\n    this._pullbkInt = 0;\r\n    this._bounceInt = 0;\r\n    this._threshold = 5;\r\n    this._timedelay = 0;\r\n    this._amplsFactor    = 0.5;\r\n    this._timeConstant   = 875;\r\n    this._elasticFactor  = 0.35;\r\n    this._bouncesFactor  = 0.05;\r\n    this._timePullFactor = 0.15;\r\n    this._forceDamping   = 0.85;\r\n    this._speedThreshold = 10;\r\n    this._maxEdgeBounces = 88;\r\n    this._dragDetection  = 200;\r\n    this._doAutoScroll        = this._doAutoScroll.bind(this);\r\n    this._doPullback          = this._doPullback.bind(this);\r\n    this._doForceBounces      = this._doForceBounces.bind(this);\r\n    this._doScrollTo          = this._doScrollTo.bind(this);\r\n    this._calcTouchesSpeed    = this._calcTouchesSpeed.bind(this);\r\n    this._calcTouchesPosition = this._calcTouchesPosition.bind(this);\r\n    this._drawScrollContainer = this._drawScrollContainer.bind(this);\r\n\r\n    this._initScrollContainer();\r\n});\r\n\r\n\r\nObject.defineProperties(ScrollContainer.prototype, {\r\n    /// <filed type='Number'>\r\n    /// 获取/设置容器的 X 轴滚动位置。</field>\r\n    scrollX: {\r\n        get: function () { return this._scrollX; },\r\n        set: function( value ) { \r\n            this._scrollX = value;\r\n            this._drawScrollPosition();\r\n        }\r\n    },\r\n\r\n    /// <filed type='Number'>\r\n    /// 获取/设置容器的 Y 轴滚动位置。</field>\r\n    scrollY: {\r\n        get: function () { return this._scrollY; },\r\n        set: function( value ) { \r\n            this._scrollY = value;\r\n            this._drawScrollPosition();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 指定滚动至边缘时，是立刻停止还是执行回弹效果。</field>\r\n    bounces: {\r\n        get: function () { return this._bounces; },\r\n        set: function( value ) { this._bounces = value; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 指示是否显示滚动位置指示器。</field>\r\n    disableIndicator: {\r\n        get: function () { return this._disableIndicator; },\r\n        set: function( value ) {\r\n            this._disableIndicator = value;\r\n        }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示是否动态调整滚动位置指示器的大小。</field>\r\n    resizeIndicator: {\r\n        get: function () { return this._resizeIndicator; },\r\n        set: function( value ) {\r\n            this._resizeIndicator = value;\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取最大 X 轴滚动范围。（注意：计算百分比时，0 不能作为分母！）</field>\r\n    scrollWidth: {\r\n        get: function () { return Math.max(0, this._content.width - this.width); }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取最大 Y 轴滚动范围。（注意：计算百分比时，0 不能作为分母！）</field>\r\n    scrollHeight: {\r\n        get: function () { return Math.max(0, this._content.height - this.height); }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取内容区的宽度。</field>\r\n    contentWidth: {\r\n        get: function () { return this._content.width; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取内容区的高度。</field>\r\n    contentHeight: {\r\n        get: function () { return this._content.height; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否允许容器在 X 轴滚动。</field>\r\n    scrollXEnabled: {\r\n        get: function () { return this._scrollXEnabled; },\r\n        set: function( value ) { this._scrollXEnabled = value; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否允许容器在 Y 轴滚动。</field>\r\n    scrollYEnabled: {\r\n        get: function () { return this._scrollYEnabled; },\r\n        set: function( value ) { this._scrollYEnabled = value; }\r\n    },\r\n\r\n    /// <field type='HTMLElement'>\r\n    /// 获取内容元素容器对象。</field>\r\n    content: {\r\n        get: function () { return this._content; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 设置 touchmove 阀值。</field>\r\n    threshold: {\r\n        get: function () { return this._threshold; },\r\n        set: function( value ) { this._threshold = value; }\r\n    }\r\n});\r\n\r\n\r\nScrollContainer.prototype._initScrollContainer = function _initScrollContainer () {\r\n    /// <summary>\r\n    /// 初始化构造函数。</summary>\r\n\r\n    this.natural.addEventListener(\"touchstart\",  this._drawScrollContainer);\r\n}\r\n\r\n\r\nScrollContainer.prototype._drawScrollPosition = function _drawScrollPosition() {\r\n    /// <summary>\r\n    /// 对元素应用滚动位置属性。</summary>\r\n    \r\n    this._setScrollPosition(this._scrollX, this._scrollY);\r\n\r\n    /// 调度位置更新事件；\r\n    this.dispatchEvent( new Event(\"scroll\", false, false) );\r\n}\r\n\r\n\r\nScrollContainer.prototype._setScrollPosition = function _setScrollPosition( scrollX, scrollY ) {\r\n    /// <summary>\r\n    /// 根据滚动位置更新 DOM 位置。</summary>\r\n\r\n    if ( scrollX > this._maxEdgeBounces ) {\r\n        scrollX = this._maxEdgeBounces;\r\n    }\r\n\r\n    if ( scrollY > this._maxEdgeBounces ) {\r\n        scrollY = this._maxEdgeBounces;\r\n    }\r\n\r\n    if ( scrollX < -this.scrollWidth - this._maxEdgeBounces ) {\r\n        scrollX = -this.scrollWidth - this._maxEdgeBounces;\r\n    }\r\n\r\n    if ( scrollY < -this.scrollHeight - this._maxEdgeBounces ) {\r\n        scrollY = -this.scrollHeight - this._maxEdgeBounces;\r\n    }\r\n\r\n    /// TIPS: 子类可自行覆盖实现下拉刷新等效果。\r\n    this._content.transform(scrollX, scrollY);\r\n}\r\n\r\n\r\nScrollContainer.prototype._setupTouchEvents = function _setupTouchEvents( isSetup ) {\r\n    /// <summary>\r\n    /// 添加/删除滚动容器的 Touch 侦听器。</summary>\r\n    /// <param name='isSetup' type='Boolean'>\r\n    /// 必须，指示是添加侦听器，还是删除侦听器。</param>\r\n\r\n    if ( isSetup ) {\r\n        this.natural.addEventListener(\"touchmove\",   this._drawScrollContainer);\r\n        this.natural.addEventListener(\"touchend\",    this._drawScrollContainer);\r\n        this.natural.addEventListener(\"touchcancel\", this._drawScrollContainer);\r\n    }\r\n    \r\n    else {\r\n        this.natural.removeEventListener(\"touchmove\",   this._drawScrollContainer);\r\n        this.natural.removeEventListener(\"touchend\",    this._drawScrollContainer);\r\n        this.natural.removeEventListener(\"touchcancel\", this._drawScrollContainer);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._drawScrollContainer = function _drawScrollContainer( evt ) {\r\n    /// <summary>\r\n    /// 处理滚动容器触摸事件。</summary>\r\n    \r\n    if ( evt.type == \"touchstart\" ) {\r\n        var dt = this._calcTouchesPosition(evt);\r\n\r\n        if ( this._hasTouched(evt, 2) ) {\r\n            this._touchXval = dt[0];\r\n            this._touchYval = dt[1];\r\n            this._amplsXval = 0;\r\n            this._amplsYval = 0;\r\n            this._velocXval = 0;\r\n            this._velocYval = 0;\r\n            this._forceXval = 0;\r\n            this._forceYval = 0;\r\n            return;\r\n        }\r\n\r\n        cancelAnimation(this._pullbkInt);\r\n        cancelAnimation(this._scrollInt);\r\n        cancelAnimation(this._bounceInt);\r\n        cancelAnimation(this._tickerInt);\r\n        \r\n        this._touchXval = dt[0];\r\n        this._touchYval = dt[1];\r\n        this._amplsXval = 0;\r\n        this._amplsYval = 0;\r\n        this._velocXval = 0;\r\n        this._velocYval = 0;\r\n        this._forceXval = 0;\r\n        this._forceYval = 0;\r\n        //this._speedXval = 0;\r\n        //this._speedYval = 0;\r\n        this._startXval = this.scrollX;\r\n        this._startYval = this.scrollY;\r\n        this._tickerInt = requestAnimation(this._calcTouchesSpeed);\r\n        this._lockAtDir = ScrollDirection.NONE;\r\n\r\n        this._setupTouchEvents(true);\r\n        return;\r\n    }\r\n    \r\n    if ( evt.type == \"touchmove\" ) {\r\n\r\n        var dt = this._calcTouchesPosition(evt);\r\n        var movedXval = dt[0] - this._touchXval;\r\n        var movedYval = dt[1] - this._touchYval;\r\n        var doPrevent = false;\r\n\r\n\r\n        if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n            if ( Math.abs(movedXval) > this._threshold ) {\r\n                this._lockAtDir = ScrollDirection.X_AXIS;\r\n            }\r\n\r\n            if ( Math.abs(movedYval) > this._threshold ) {\r\n                if ( this._lockAtDir == ScrollDirection.X_AXIS ) {\r\n                    this._lockAtDir = ScrollDirection.XY_AXIS;\r\n                }\r\n\r\n                else {\r\n                    this._lockAtDir = ScrollDirection.Y_AXIS;\r\n                }\r\n            }\r\n\r\n            if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if ( this.scrollXEnabled && (this._lockAtDir == ScrollDirection.X_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            doPrevent = true;\r\n\r\n            if ( this.scrollX > 0 || this.scrollX < -this.scrollWidth ) {\r\n                this.scrollX = this.scrollX + movedXval * this._elasticFactor;\r\n            }\r\n\r\n            else {\r\n                this.scrollX = this.scrollX + movedXval;\r\n            }\r\n\r\n            this._showIndicator(0, 1);\r\n        } \r\n            \r\n        if ( this.scrollYEnabled && (this._lockAtDir == ScrollDirection.Y_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            doPrevent = true;\r\n\r\n            if ( this.scrollY > 0 || this.scrollY < -this.scrollHeight ) {\r\n                this.scrollY = this.scrollY + movedYval * this._elasticFactor;\r\n            }\r\n\r\n            else {\r\n                this.scrollY = this.scrollY + movedYval;\r\n            }\r\n\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        if ( doPrevent ) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n\r\n        this._touchXval = dt[0];\r\n        this._touchYval = dt[1];\r\n        return;\r\n    }\r\n\r\n    if ( evt.type == \"touchend\" || evt.type == \"touchcancel\" ) {\r\n        if ( this._hasTouched(evt, 1) ) {\r\n            var dt = this._calcTouchesPosition(evt);\r\n\r\n            this._touchXval  = dt[0];\r\n            this._touchYval  = dt[1];\r\n            return;\r\n        }\r\n        \r\n        cancelAnimation(this._pullbkInt);\r\n        cancelAnimation(this._scrollInt);\r\n        cancelAnimation(this._bounceInt);\r\n        cancelAnimation(this._tickerInt);\r\n\r\n        this._setupTouchEvents(false);\r\n\r\n        var doPullXs = false;\r\n        var doPullYs = false;\r\n        var doScroll = false;\r\n        \r\n        if ( this.scrollXEnabled && this.scrollX > 0 ) {\r\n            doPullXs = true;\r\n            this._amplsXval = -this.scrollX;\r\n            this._targtXval = this.scrollX + this._amplsXval;\r\n        }\r\n        \r\n        else if ( this.scrollXEnabled && this.scrollX < -this.scrollWidth ) {\r\n            doPullXs = true;\r\n            this._amplsXval = - this.scrollWidth - this.scrollX;\r\n            this._targtXval = this.scrollX + this._amplsXval;\r\n        }\r\n        \r\n        if ( this.scrollYEnabled && this.scrollY > 0 ) {\r\n            doPullYs = true;\r\n            this._amplsYval = -this.scrollY;\r\n            this._targtYval = this.scrollY + this._amplsYval;\r\n        }\r\n        \r\n        else if ( this.scrollYEnabled && (this.scrollY < -this.scrollHeight) ) {\r\n            doPullYs = true;\r\n            this._amplsYval = -this.scrollHeight - this.scrollY;\r\n            this._targtYval = this.scrollY + this._amplsYval;\r\n        }\r\n\r\n        if ( !(doPullXs) && (this._lockAtDir == ScrollDirection.X_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            if ( Math.abs(this._speedXval) >= this._speedThreshold ) {\r\n                doScroll = true;\r\n                this._velocXval = this._amplsFactor * this._speedXval;\r\n                this._distsXval = this.scrollX + this._velocXval;\r\n            }\r\n\r\n            else {\r\n                this._showIndicator(0, 0);\r\n            }\r\n        }\r\n\r\n        if ( !(doPullYs) && (this._lockAtDir == ScrollDirection.Y_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            if ( Math.abs(this._speedYval) >= this._speedThreshold ) {\r\n                doScroll = true;\r\n                this._velocYval = this._amplsFactor * this._speedYval;\r\n                this._distsYval = this.scrollY + this._velocYval;\r\n            }\r\n\r\n            else {\r\n                this._showIndicator(1, 0);\r\n            }\r\n        }\r\n\r\n        if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n            this._showIndicator(0, 0);\r\n            this._showIndicator(1, 0);\r\n        }\r\n\r\n        if ( doPullXs || doPullYs ) {\r\n            this._pullstamp = timeNow();\r\n            this._pullbkInt = requestAnimation(this._doPullback);\r\n            this.dispatchEvent(new Event(\"pull\", false, false));\r\n        }\r\n\r\n        if ( doScroll ) {\r\n            this._timestamp = timeNow();\r\n            this._scrollInt = requestAnimation(this._doAutoScroll);\r\n\r\n            var dragEvent = new Event(\"drag\", false, false);\r\n                dragEvent.vx = this._velocXval;\r\n                dragEvent.vy = this._velocYval;\r\n\r\n            this.dispatchEvent( dragEvent );\r\n        }\r\n        \r\n        //if ( evt.type == \"touchend\" && this._lockAtDir == ScrollDirection.NONE) {\r\n        //    /// 触发 tap 事件；\r\n        //    var tapEvent = document.createEvent(\"Event\");\r\n        //        tapEvent.initEvent(\"tap\", true, true);\r\n\r\n        //    var target = evt.target;\r\n        //    target.dispatchEvent( tapEvent);\r\n        //}\r\n\r\n        return;\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._calcTouchesSpeed = function _calcTouchesSpeed () {\r\n    /// <summary>\r\n    /// 计算手指移动速度。</summary>\r\n    var now = timeNow();\r\n    var elapsed = now - this._timestamp;\r\n    \r\n    var deltaXval = this.scrollX - this._startXval;\r\n    var deltaYval = this.scrollY - this._startYval;\r\n\r\n    this._startXval = this.scrollX;\r\n    this._startYval = this.scrollY;\r\n    this._speedXval = 0.8 * (1000 * deltaXval / (1 + elapsed)) + 0.2 * this._speedXval;\r\n    this._speedYval = 0.8 * (1000 * deltaYval / (1 + elapsed)) + 0.2 * this._speedYval;\r\n\r\n    this._timestamp = now;\r\n    this._tickerInt = requestAnimation(this._calcTouchesSpeed);\r\n}\r\n\r\n\r\nScrollContainer.prototype._calcTouchesPosition = function _calcTouchesPosition( evt ) {\r\n    /// <summary>\r\n    /// 计算手指移动位置。</summary>\r\n\r\n    if ( evt.type == \"touchstart\" \r\n      || evt.type == \"touchend\" \r\n      || evt.type == \"touchmove\" \r\n      || evt.type == \"touchcancel\" ) {\r\n\r\n        return this._getAverageOfTouches(evt.touches);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._getAverageOfTouches = function _getAverageOfTouches( touches ) {\r\n    /// <summary>\r\n    /// 计算所有触摸点的平均值。</summary>\r\n\r\n    for ( var i = 0, dt = [0, 0]; i < touches.length; ++i ) {\r\n\r\n        if ( i == 0 ) {\r\n            dt[0] = touches[i].clientX;\r\n            dt[1] = touches[i].clientY;\r\n        }\r\n\r\n        else {\r\n            dt[0] = (dt[0] + touches[i].clientX) * 0.5;\r\n            dt[1] = (dt[1] + touches[i].clientY) * 0.5;\r\n        }\r\n    }\r\n\r\n    return dt;\r\n}\r\n\r\n\r\nScrollContainer.prototype._hasTouched = function _hasTouched( evt, count ) {\r\n    /// <summary>\r\n    /// 判断是否按下了指定数量的手指。</summary>\r\n\r\n    if ( evt.type == \"touchstart\" \r\n      || evt.type == \"touchmove\" \r\n      || evt.type == \"touchend\" \r\n      || evt.type == \"touchcancel\" ) {\r\n\r\n        return (evt.touches.length >= count);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nScrollContainer.prototype._doAutoScroll = function _doAutoScroll () {\r\n    /// <summary>\r\n    /// 根据移动速度自动滚动一定距离。</summary>\r\n\r\n    var fact = Math.exp((this._timestamp - timeNow()) / (this._timeConstant));\r\n    var dist = 0;\r\n    var next = false;\r\n    var bounce = false;\r\n\r\n    if ( this._velocXval ) {\r\n        dist = -this._velocXval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            dist = this._distsXval + dist;\r\n            this._forceXval = 0.8 * (dist - this.scrollX) + 0.2 * this._forceXval;\r\n            this.scrollX = dist;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            dist = this._distsXval;\r\n            this._forceXval = 0.8 * (dist - this.scrollX) + 0.2 * this._forceXval;\r\n            this.scrollX = dist;\r\n            this._velocXval = 0;\r\n            this._showIndicator(0, 0);\r\n        }\r\n\r\n        if ( dist > 0 || dist < -this.scrollWidth ) {\r\n            next = false;\r\n            this._velocXval = 0;\r\n            this.scrollX = dist > 0 ? 0 : -this.scrollWidth;\r\n            \r\n            if ( this._bounces ) {\r\n                bounce = true;\r\n                this._edgesXval = dist > 0 ? 0 : dist < -this.scrollWidth ? -this.scrollWidth : 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( this._velocYval ) {\r\n        dist = -this._velocYval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            dist = this._distsYval + dist;\r\n            this._forceYval = 0.8 * (dist - this.scrollY) + 0.2 * this._forceYval;\r\n            this.scrollY = dist;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            dist = this._distsYval;\r\n            this._forceYval = 0.8 * (dist - this.scrollY) + 0.2 * this._forceYval;\r\n            this.scrollY = dist;\r\n            this._velocYval = 0;\r\n            this._showIndicator(1, 0);\r\n        }\r\n\r\n        if ( dist > 0 || dist < -this.scrollHeight ) {\r\n            next = false;\r\n            this._velocYval = 0;\r\n            this.scrollY = dist > 0 ? 0 : -this.scrollHeight;\r\n\r\n            if ( this._bounces ) {\r\n                bounce = true;\r\n                this._edgesYval = dist > 0 ? 0 : dist < -this.scrollHeight ? -this.scrollHeight : 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._pullbkInt = requestAnimation(this._doAutoScroll);\r\n    }\r\n\r\n    if ( bounce ) {\r\n        cancelAnimation(this._bounceInt);\r\n        this._bounceInt = requestAnimation(this._doForceBounces);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._doPullback = function _doPullback () {\r\n    /// <summary>\r\n    /// 边缘拉回。</summary>\r\n\r\n    var fact = Math.exp((this._pullstamp - timeNow()) / (this._timeConstant * this._timePullFactor));\r\n    var dist = 0;\r\n    var next = false;\r\n\r\n    if ( this._amplsXval ) {\r\n        dist = -this._amplsXval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            this.scrollX = this._targtXval + dist;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            this.scrollX = this._targtXval;\r\n            this._amplsXval = 0;\r\n            this._showIndicator(0, 0);\r\n        }\r\n    }\r\n\r\n    if ( this._amplsYval ) {\r\n        dist = -this._amplsYval * fact;\r\n        \r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            this.scrollY = this._targtYval + dist;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            this.scrollY = this._targtYval;\r\n            this._amplsYval = 0;\r\n            this._showIndicator(1, 0);\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._pullbkInt = requestAnimation(this._doPullback);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._doForceBounces = function _doForceBounces() {\r\n    /// <summary>\r\n    /// 边缘回弹。</summary>\r\n\r\n    var declsX = 0;\r\n    var declsY = 0;\r\n    var next = false;\r\n\r\n    if ( !this._velocXval && this._forceXval ) {\r\n        declsX = (this._edgesXval - this.scrollX) * this._bouncesFactor;\r\n\r\n        this._forceXval += declsX;\r\n        this._forceXval *= this._forceDamping;\r\n\r\n        if ( Math.abs(this._forceXval) >= 0.001 ) {\r\n            next = true;\r\n            this.scrollX += this._forceXval * this._elasticFactor;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            this._forceXval = 0;\r\n            this.scrollX = this._edgesXval;\r\n            this._showIndicator(0, 0);\r\n        }\r\n    }\r\n\r\n    if ( !this._velocYval && this._forceYval ) {\r\n        declsY = (this._edgesYval - this.scrollY) * this._bouncesFactor;\r\n\r\n        this._forceYval += declsY;\r\n        this._forceYval *= this._forceDamping;\r\n\r\n        if ( Math.abs(this._forceYval) >= 0.001 ) {\r\n            next = true;\r\n            this.scrollY += this._forceYval * this._elasticFactor;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            this._forceYval = 0;\r\n            this.scrollY = this._edgesYval;\r\n            this._showIndicator(1, 0);\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._bounceInt = requestAnimation(this._doForceBounces);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype.scrollTo = function scrollTo( time, x, y ) {\r\n    /// 手动滚动；\r\n    this._stopAllDelayTimer();\r\n\r\n    this._distsXval = x;\r\n    this._distsYval = y;\r\n    this._velocXval = this._distsXval - this.scrollX;\r\n    this._velocYval = this._distsYval - this.scrollY;\r\n    this._timedelay = time;\r\n    this._timestamp = timeNow();\r\n    this._scrollInt = requestAnimation(this._doScrollTo);\r\n}\r\n\r\n\r\nScrollContainer.prototype._doScrollTo = function _doScrollTo() {\r\n    var time = timeNow() - this._timestamp;\r\n    var next = false;\r\n\r\n    if ( (time < this._timedelay) && (this._timedelay > 0) ) {\r\n        if ( Math.abs(this._velocXval) > 0.001 ) {\r\n            next = true;\r\n            this.scrollX = (this._distsXval - this._velocXval) + this._velocXval * (time / this._timedelay);\r\n        }\r\n\r\n        if ( Math.abs(this._velocYval) > 0.001 ) {\r\n            next = true;\r\n            this.scrollY = (this._distsYval - this._velocYval) + this._velocYval * (time / this._timedelay);\r\n        }\r\n\r\n        if ( next ) {\r\n            this._scrollInt = requestAnimation(this._doScrollTo);\r\n        }\r\n    }\r\n\r\n    else {\r\n        this.scrollX = this._distsXval;\r\n        this.scrollY = this._distsYval;\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._stopAllDelayTimer = function _stopAllDelayTimer() {\r\n    cancelAnimation(this._pullbkInt);\r\n    cancelAnimation(this._scrollInt);\r\n    cancelAnimation(this._bounceInt);\r\n    cancelAnimation(this._tickerInt);\r\n}\r\n\r\n\r\nScrollContainer.prototype._showIndicator = function _showIndicator( type, alpha ) {\r\n    /// 显示/绘制/更新滚动位置指示器。\r\n\r\n    if ( this._disableIndicator ) {\r\n        /// 禁止显示指示器\r\n        return;\r\n    }\r\n\r\n    this._createIndicator();\r\n\r\n    if ( type == 0 && this._scrollXTracker ) {\r\n        if ( alpha == 1 ) {\r\n            this._updateIndicator(type);\r\n            this._scrollXTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n\r\n        else {\r\n            this._scrollXTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n    }\r\n\r\n    if ( type == 1 && this._scrollYTracker ) {\r\n        if ( alpha == 1 ) {\r\n            this._updateIndicator(type);\r\n            this._scrollYTracker.natural.classList.add(\"scroll-track-showing\");\r\n        }\r\n\r\n        else {\r\n            this._scrollYTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._createIndicator = function _createIndicator() {\r\n    if ( this.scrollXEnabled && !this._scrollXIndicator ) {\r\n        this._scrollXTracker = new Sprite(document.createElement(\"div\"));\r\n        this._scrollXTracker.natural.className = \"scroll-track scroll-x-track\";\r\n        this._scrollXIndicator = new Sprite(document.createElement(\"div\"));\r\n        this._scrollXIndicator.natural.className = \"scroll-indicator\";\r\n\r\n        this._scrollXTracker.natural.appendChild(this._scrollXIndicator.natural);\r\n        this.natural.appendChild(this._scrollXTracker.natural);\r\n    }\r\n\r\n    if ( this.scrollYEnabled && !this._scrollYIndicator ) {\r\n        this._scrollYTracker = new Sprite(document.createElement(\"div\"));\r\n        this._scrollYTracker.natural.className = \"scroll-track scroll-y-track\";\r\n        this._scrollYIndicator = new Sprite(document.createElement(\"div\"));\r\n        this._scrollYIndicator.natural.className = \"scroll-indicator\";\r\n\r\n        this._scrollYTracker.natural.appendChild(this._scrollYIndicator.natural);\r\n        this.natural.appendChild(this._scrollYTracker.natural);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._updateIndicator = function _updateIndicator( type ) {\r\n    if ( type == 0 ) {\r\n        var scale = ((this.width <= 0 || this.contentWidth <= 0) ? 0 : this.width / this.contentWidth);\r\n        var value = (this.scrollX > 0 ? 0 : this.scrollX < -this.scrollWidth ? this.scrollWidth : -this.scrollX);\r\n        var percent = (this.scrollWidth <= 0 ? (this.scrollY >= 0 ? 0 : 1) : value / this.scrollWidth);\r\n\r\n\r\n        if ( this.resizeIndicator ) {\r\n            var width = this._scrollXTracker.width * scale;\r\n            var flowX = this.scrollX > 0 ? this.scrollX : this.scrollX < -this.scrollWidth ? -this.scrollWidth - this.scrollX : 0;\r\n                flowX = (width <= 0 ? 0 : 1 - Math.min(1, flowX / width)); \r\n\r\n            this._scrollXIndicator.natural.style.width = (width * flowX) + \"px\";\r\n        }\r\n\r\n        this._scrollXIndicator.x = Math.max(0, this._scrollXTracker.width - this._scrollXIndicator.width) * percent;\r\n    }\r\n\r\n    if ( type == 1 ) {\r\n        var scale = ((this.height <= 0 || this.contentHeight <= 0) ? 0 : this.height / this.contentHeight);\r\n        var value = (this.scrollY > 0 ? 0 : this.scrollY < -this.scrollHeight ? this.scrollHeight : -this.scrollY);\r\n        var percent = (this.scrollHeight <= 0 ? (this.scrollY >= 0 ? 0 : 1) : value / this.scrollHeight);\r\n\r\n\r\n        if ( this.resizeIndicator ) {\r\n            var height = this._scrollYTracker.height * scale;\r\n            var flowY  = this.scrollY > 0 ? this.scrollY : this.scrollY < -this.scrollHeight ? -this.scrollHeight - this.scrollY : 0;\r\n                flowY = (height <= 0 ? 0 : 1 - Math.min(1, flowY / height)); \r\n\r\n            this._scrollYIndicator.natural.style.height = (height * flowY) + \"px\";\r\n        }\r\n\r\n        this._scrollYIndicator.y = Math.max(0, this._scrollYTracker.height - this._scrollYIndicator.height) * percent;\r\n    }\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../view/Sprite.js' />\r\n/// <reference path='../view/ScrollContainer.js' />\r\n\r\n\r\nvar PageBase = derive(Sprite, function PageBase( disableContainer ) {\r\n    Sprite.call(this, document.body);\r\n\r\n    /// 全局配置文件；\r\n    this._appConfigParam = domain[\"APP_CONFIG_PARAMS\"] || {};\r\n\r\n\r\n    /// 主滚动容器；\r\n    if ( !disableContainer ) {\r\n        this._mainContainer = new ScrollContainer(\"#main\");\r\n    }\r\n});\r\n\r\n","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='core/derive.js' />\r\n/// <reference path='page/PageBase.js' />\r\n\r\n\r\n\r\nvar Page = derive(PageBase, function Page() {\r\n    PageBase.call(this);\r\n});\r\n"],"sourceRoot":"/source/"}