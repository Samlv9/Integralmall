{"version":3,"sources":["core/derive.js","events/EventPhase.js","events/Event.js","events/EventListener.js","events/EventDispatcher.js","view/ScrollDirection.js","utils/URLParams.js","view/Sprite.js","core/timing.js","view/ScrollContainer.js","view/FPSRendener.js","page/PageBase.js","express.js"],"names":["derive","base","ctor","newProps","Object","create","prototype","oldProps","itList","getOwnPropertyNames","itResult","i","length","getOwnPropertyDescriptor","defineProperties","EventPhase","Error","Event","type","bubbles","cancelable","this","_type","_bubbles","_cancelable","_target","_currentTarget","_eventPhase","NONE","_defaultPrevented","_needStopPropagation","_needStopImmediatePropagation","EventListener","handler","priority","_handler","_priority","EventDispatcher","target","_dispatcherCaptureRegister","_dispatcherBubbleRegister","_dispatcherRelatedTarget","ScrollDirection","URLParams","search","indexOf","slice","urlParts","split","urlToken","urlParam","keyParam","valParam","f","parseFloat","isNaN","value","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","get","currentTarget","eventPhase","defaultPrevented","preventDefault","stopPropagation","stopImmediatePropagation","handleEvent","event","call","addEventListener","listener","useCapture","removeEventListener","sortedList","push","len","splice","hasEventListener","hasOwnProperty","willTrigger","tempToken","parent","dispatchEvent","_dispatchEvent","tempChain","selfIndex","selfChain","concat","Sprite","selector","_element","$","_natural","_scaleX","_scaleY","_rotation","_translateX","_translateY","_hrwAccelEnabled","reg","element","natural","hrwAccelEnabled","set","width","clientWidth","height","clientHeight","x","_applyTransform","y","scaleX","scaleY","rotation","_setTransform","transform","style","webkitTransform","SPID_POINTER","SPID_DICTION","sprite","setAttribute","spid","getAttribute","cls","requestAnimation","window","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimation","cancelAnimationFrame","webkitCancelAnimationFrame","X_AXIS","Y_AXIS","Z_AXIS","XY_AXIS","XZ_AXIS","YZ_AXIS","LEFT","RIGHT","UP","DOWN","IN","OUT","ScrollContainer","_content","children","_scrollX","_scrollY","_scrollRealX","_scrollRealY","_bounces","_scrollXEnabled","_scrollYEnabled","_scrollXIndicator","_scrollYIndicator","_scrollXTracker","_scrollYTracker","_disableIndicator","_resizeIndicator","_contentWidth","_contentHeight","_viewportWidth","_viewportHeight","_lockAtDir","_startXval","_startYval","_speedXval","_speedYval","_amplsXval","_amplsYval","_touchXval","_touchYval","_targtXval","_targtYval","_velocXval","_velocYval","_distsXval","_distsYval","_forceXval","_forceYval","_edgesXval","_edgesYval","_tickerInt","_timestamp","_pullstamp","_scrollInt","_pullbkInt","_bounceInt","_threshold","_timedelay","_amplsFactor","_timeConstant","_elasticFactor","_bouncesFactor","_timePullFactor","_forceDamping","_speedThreshold","_maxTopEdgeBounces","_doAutoScroll","bind","_doPullback","_doForceBounces","_doScrollTo","_calcTouchesSpeed","_calcTouchesPosition","_drawScrollContainer","_initScrollContainer","scrollX","_drawScrollPosition","scrollY","maxTopEdgeBounces","Math","min","bounces","disableIndicator","resizeIndicator","scrollWidth","max","contentWidth","viewportWidth","scrollHeight","contentHeight","viewportHeight","scrollXEnabled","scrollYEnabled","content","threshold","updateFrameSizes","_setScrollPosition","_setupTouchEvents","isSetup","evt","dt","_hasTouched","movedXval","movedYval","doPrevent","abs","_showIndicator","doPullXs","doPullYs","doScroll","Date","now","dragEvent","vx","vy","elapsed","deltaXval","deltaYval","_getAverageOfTouches","touches","clientX","clientY","count","fact","exp","dist","next","bounce","declsX","declsY","scrollTo","time","_stopAllDelayTimer","alpha","_createIndicator","_updateIndicator","classList","remove","add","document","createElement","className","appendChild","scale","percent","flowX","flowY","FPSRendener","css","position","left","top","color","padding","background","zIndex","body","_frameRate","_lastTimer","_currTimer","_updateFrameRateHandler","_updateTextContent","text","PageBase","disableContainer","console","log","toJSON","_appConfigParam","domain","_urlParams","location","_mainContainer","Page"],"mappings":"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","file":"express.js","sourcesContent":["/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction derive( base, ctor ) {\r\n    /// <summary>\r\n    /// 使用 JS 中的原型链，创建类型之间的扩展与继承。</summary>\r\n    /// <param name='base' type='Function'>\r\n    /// 必须，指定被扩展基类。注：该参数可以为 null。</param>\r\n    /// <param name='ctor' type='Function'>\r\n    /// 必须，指定从基类继承的子类。</param>\r\n    /// <returns type='Function'>\r\n    /// 返回对子类的引用。</returns>\r\n\r\n    if ( typeof base != \"function\" ) {\r\n        /// 如果提供的基类不是一个可扩展的对象，则函数不做任何修改。默认 ctor 为 Object 的子类。\r\n        return;\r\n    }\r\n\r\n    var newProps = Object.create(base.prototype);\r\n    var oldProps = ctor.prototype;\r\n\r\n    /// 覆盖子类的原型对象之前（Prototype），需要保存子类的原型对象（Prototype）。\r\n    /// 然后在覆盖之后，将保存的原型对象上的属性和方法添加到新的原型对象中。\r\n    /// 这样不会导致方法或者属性再应用原型继承后丢失。\r\n    var itList = Object.getOwnPropertyNames(oldProps);\r\n    var itResult = {};\r\n\r\n    for ( var i = 0; i < itList.length; ++i ) {\r\n        itResult[itList[i]] = Object.getOwnPropertyDescriptor(oldProps, itList[i]);\r\n    }\r\n\r\n    ctor.prototype = newProps;\r\n    Object.defineProperties(ctor.prototype, itResult);\r\n\r\n    return ctor;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction EventPhase() {\r\n    /// <summary>\r\n    /// 定义描述事件阶段的常量。</summary>\r\n\r\n    throw new Error(\"无法创建常量枚举类型的实例。\");\r\n}\r\n\r\n\r\nObject.defineProperties(EventPhase, {\r\n    /// <field type='UInt8'>\r\n    /// 定义事件初始状态常量。</field>\r\n    NONE           : { value: 0x00 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件捕获阶段状态常量。</field>\r\n    CAPTURING_PHASE: { value: 0x01 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件目标阶段状态常量。</field>\r\n    AT_TARGET      : { value: 0x02 },\r\n\r\n    /// <field type='UInt8'>\r\n    /// 定义事件冒泡阶段状态常量。</field>\r\n    BUBBLING_PHASE : { value: 0x03 }\r\n});\r\n","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='./EventPhase.js' />\r\n\r\n\r\nfunction Event( type, bubbles, cancelable ) {\r\n    /// <summary>\r\n    /// 定义一个自定义的事件对象。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='bubbles' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指定该事件是否为冒泡型事件。</param>\r\n    /// <param name='cancelable' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指定该事件是否可以由侦听器取消相关的默认行为。</param>\r\n\r\n    /// <field type='String'>\r\n    /// 事件的类型。</field>\r\n    this._type = type;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否参与冒泡。</field>\r\n    this._bubbles = bubbles;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否可取消默认行为。</field>\r\n    this._cancelable = cancelable;\r\n\r\n    /// <field type='EventDispatcher'>\r\n    /// 该事件起始目标对象。</field>\r\n    this._target = null;\r\n\r\n    /// <field type='EventDispatcher'>\r\n    /// 该事件当前目标对象。</field>\r\n    this._currentTarget = null;\r\n\r\n    /// <field type='UInt8'>\r\n    /// 该事件当前状态。</field>\r\n    this._eventPhase = EventPhase.NONE;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否已经取消了默认行为。</field>\r\n    this._defaultPrevented = false;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否应该在调度完当前节点后停止调度。</field>\r\n    this._needStopPropagation = false;\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示事件是否应该立刻停止调度，当前节点的后续侦听器以及后续所有节点的侦听器都不会收到该事件。</field>\r\n    this._needStopImmediatePropagation = false;\r\n}\r\n\r\n\r\nObject.defineProperties(Event.prototype, {\r\n    /// <value type='String'>\r\n    /// 获取事件类型。</value>\r\n    type: {\r\n        get: function () { return this._type; }\r\n    },\r\n\r\n    /// <value type='String'>\r\n    /// 获取该事件是否参与冒泡。</value>\r\n    bubbles: {\r\n        get: function () { return this._bubbles; }\r\n    },\r\n\r\n    /// <value type='Boolean'>\r\n    /// 获取该事件是否可以取消默认行为。</value>\r\n    cancelable: {\r\n        get: function () { return this._cancelable; }\r\n    },\r\n\r\n    /// <value type='EventTarget'>\r\n    /// 获取事件的起始目标对象。</value>\r\n    target: {\r\n        get: function () { return this._target; }\r\n    },\r\n\r\n    /// <value type='EventTarget'>\r\n    /// 获取事件的当前目标对象。</value>\r\n    currentTarget: {\r\n        get: function () { return this._currentTarget; }\r\n    },\r\n\r\n    /// <value type='UInt8'>\r\n    /// 获取事件当前状态。</value>\r\n    eventPhase: {\r\n        get: function () { return this._eventPhase; }\r\n    },\r\n\r\n    /// <value type='Boolean'>\r\n    /// 指示该事件是否已经取消了默认行为。</value>\r\n    defaultPrevented: {\r\n        get: function () { return this._defaultPrevented; }\r\n    }\r\n});\r\n\r\n\r\nEvent.prototype.preventDefault = function preventDefault() {\r\n    /// <summary>\r\n    /// 取消该事件相关的默认行为。</summary>\r\n\r\n    if ( this._cancelable ) {\r\n        this._defaultPrevented = true;\r\n    }\r\n}\r\n\r\n\r\nEvent.prototype.stopPropagation = function stopPropagation() {\r\n    /// <summary>\r\n    /// 停止该传递事件，事件目标的后续节点将不会收到该事件。</summary>\r\n\r\n    this._needStopPropagation = true;\r\n}\r\n\r\n\r\nEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\r\n    /// <summary>\r\n    /// 立刻停止传递该事件，事件的后续侦听器以及事件目标后续所有节点都不会收到该事件。</summary>\r\n\r\n    this._needStopPropagation = true;\r\n    this._needStopImmediatePropagation = true;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction EventListener( handler, priority ) {\r\n    /// <summary>\r\n    /// 创建一个事件侦听器对象。\r\n    /// 说明：参数 `handler` 可以是一个 Function 类型的对象，或者是一个具有 `handleEvent()` 方法的\r\n    /// Object 类型的对象。</summary>\r\n    /// <param name='handler' type='Function'>\r\n    /// 必须，指定事件处理函数或者事件处理对象。</param>\r\n    /// <param name='priority' type='UInt32' optional='true'>\r\n    /// 可选，默认值：0。指定该侦听器的优先级。</param>\r\n\r\n    /// <field type='Function'>\r\n    /// 该侦听器的处理函数。</field>\r\n    this._handler = handler;\r\n\r\n    /// <field type='UInt32'>\r\n    /// 指示该侦听器的优先级。</field>\r\n    this._priority = priority || 0;\r\n}\r\n\r\n\r\nObject.defineProperties(EventListener.prototype, {\r\n    /// <filed type='UInt8'>\r\n    /// 获取该侦听器的优先级。</field>\r\n    priority: {\r\n        get: function () { return this._priority; }\r\n    },\r\n\r\n    /// <field type='Function'>\r\n    /// 获取事件处理函数对象。</field>\r\n    handler: {\r\n        get: function () { return this._handler; }\r\n    }\r\n});\r\n\r\n\r\nEventListener.prototype.handleEvent = function handleEvent( event ) {\r\n    /// <summary>\r\n    /// 调用并执行事件处理函数。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，传递给事件处理函数的事件对象。</param>\r\n    /// <returns type='*'>\r\n    /// 返回事件处理函数的返回值。</returns>\r\n\r\n    if ( typeof this._handler == \"function\" ) {\r\n        /// 1，对于 Function 类型的处理函数，将该 Function 中的 this 指向事件的 currentTarget 属性。\r\n        /// 然后执行该函数。\r\n        \r\n        return this._handler.call(event.currentTarget, event);\r\n    }\r\n\r\n    /// 2，对于 Object.handleEvent 类型的事件处理对象。\r\n    /// 则可以直接调用该对象的 `handleEvent()` 方法并返回处理结果。\r\n    return this._handler.handleEvent(event);\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='./Event.js' />\r\n/// <reference path='./EventPhase.js' />\r\n/// <reference path='./EventListener.js' />\r\n\r\n\r\nfunction EventDispatcher( target ) {\r\n    /// <summary>\r\n    /// 定义具备事件调度功能的类型的基类。</summary>\r\n    /// <param name='target' type='Object' optional='true'>\r\n    /// 可选，默认值：null。指示该调度器使用的事件目标对象。</param>\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该调度器中捕获阶段的所有侦听器寄存对象。</field>\r\n    this._dispatcherCaptureRegister = {};\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该调度器中冒泡阶段的所有的侦听器。</field>\r\n    this._dispatcherBubbleRegister  = {};\r\n\r\n    /// <field type='Object'>\r\n    /// 指示该侦听器的事件目标对象。</field>\r\n    this._dispatcherRelatedTarget   = target || this;\r\n}\r\n\r\n\r\nEventDispatcher.prototype.addEventListener = function addEventListener( type, listener, useCapture, priority ) {\r\n    /// <summary>\r\n    /// 为当前对象注册指定类型的事件侦听器。\r\n    /// 说明：\r\n    ///     1，参数 `listener` 可以是一个 Function 类型的对象，或者是具有 `handleEvent()` 方法的 Object 类型的对象。\r\n    ///     2，使用不同的 `useCapture`（分别使用 true 和 false 值），但使用同一侦听器注册事件时，将注册为不同阶段的事件处理器。\r\n    ///     3，在事件调度过程中，优先级高的侦听器会比优先级低的侦听器更早执行。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='listener' type='Function'>\r\n    /// 必须，指定事件侦听器。</param>\r\n    /// <param name='useCapture' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指示该侦听器是否在捕获阶段处理事件。</param>\r\n    /// <param name='priority' type='UInt32' optional='true'>\r\n    /// 可选，默认值：0。指示该侦听器的优先级。</param>\r\n\r\n    /// TODU: 防止相同的事件侦听器被重复注册。\r\n    this.removeEventListener(type, listener, useCapture);\r\n\r\n\r\n    /// TODU: 为该类型的事件创建一个寄存列表。\r\n    if ( !this._dispatcherCaptureRegister[type] ) {\r\n        this._dispatcherCaptureRegister[type] = [];\r\n    }\r\n\r\n    if ( !this._dispatcherBubbleRegister[type] ) {\r\n        this._dispatcherBubbleRegister[type] = [];\r\n    }\r\n\r\n    /// TODU: 获取侦听器列表，并将该侦听器按优先级顺序添加进列表中。\r\n    var sortedList = useCapture ? this._dispatcherCaptureRegister[type] : this._dispatcherBubbleRegister[type];\r\n    var listener = new EventListener(listener, priority);\r\n    \r\n    if ( (!sortedList.length) || \r\n         (listener.priority <= sortedList[sortedList.length - 1].priority) ) {\r\n        /// 通常注册事件都是使用默认的优先级值 0，按照排序规则高优先级在前，低优先级在后。这种类型的注册只需要\r\n        /// 将后添加的侦听器直接 push 到队列的末尾。\r\n\r\n        sortedList.push(listener);\r\n    }\r\n\r\n    else {\r\n        /// 将优先级高的侦听器放置在队列的前面。\r\n        for ( var i = 0, len = sortedList.length; i < len; ++i ) {\r\n            if ( listener.priority > sortedList[i].priority ) {\r\n                sortedList.splice(i, 0, listener);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nEventDispatcher.prototype.removeEventListener = function removeEventListener( type, listener, useCapture ) {\r\n    /// <summary>\r\n    /// 删除指定类型的事件侦听器。\r\n    /// 说明：如果事件侦听器是通过不同的 `useCapture` 值注册的，需要使用对应的 `useCapture` 来删除该侦听器。</summary>\r\n    /// <param name='type' type='String'>\r\n    /// 必须，指定事件类型。</param>\r\n    /// <param name='listener' type='Function'>\r\n    /// 必须，指定事件侦听器。</param>\r\n    /// <param name='useCapture' type='Boolean' optional='true'>\r\n    /// 可选，默认值：false。指示该侦听器是否在捕获阶段处理事件。</param>\r\n\r\n    var sortedList = (useCapture ? this._dispatcherCaptureRegister[type] : this._dispatcherBubbleRegister[type]);\r\n\r\n    /// TODU: 删除事件侦听器时，必须完全相等才执行删除操作。\r\n    if ( sortedList && sortedList.length ) {\r\n        for ( var i = 0, len = sortedList.length; i < len; ++i ) {\r\n            if ( listener === sortedList[i].handler ) {\r\n                sortedList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nEventDispatcher.prototype.hasEventListener = function hasEventListener( type ) {\r\n    /// <summary>\r\n    /// 检查当前对象是否为指定类型的事件注册了任何该类型的侦听器。</summary>\r\n    /// <returns type='Boolean'>\r\n    /// 如果当前对象中存在该类型事件的侦听器，则返回 true，否则返回 false。</returns>\r\n\r\n    return (this._dispatcherCaptureRegister.hasOwnProperty(type) && this._dispatcherCaptureRegister[type].length >= 1)\r\n        || (this._dispatcherBubbleRegister .hasOwnProperty(type) && this._dispatcherBubbleRegister [type].length >= 1);\r\n}\r\n\r\n\r\nEventDispatcher.prototype.willTrigger = function willTrigger( type ) {\r\n    /// <summary>\r\n    /// 检测当前对象以及当前对象的传递路径中是否为指定事件类型注册了任何该类型的侦听器。</summary>\r\n    /// <returns type='Boolean'>\r\n    /// 如果存在该类型的侦听器，则返回 true。否则返回 false。</returns>\r\n\r\n    if ( this.hasEventListener(type) ) {\r\n        return true;\r\n    }\r\n\r\n    for ( var tempToken; tempToken = tempToken.parent; ) {\r\n        if ( tempToken.hasEventListener(type) ) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nEventDispatcher.prototype.dispatchEvent = function dispatchEvent( event ) {\r\n    /// <summary>\r\n    /// 调度一个事件到当前对象的事件流中。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，指定被调度到事件流中的事件对象。</param>\r\n    /// <returns type='Boolean'>\r\n    /// 当事件传递完成时，如果没取消默认行为。则返回 true，否则返回 false。\r\n    /// 补充说明：\r\n    ///     1，如果事件在传递过程中被中断，则返回 false 值。\r\n    ///     2，如果事件不参与冒泡行为并且没有被取消默认行为，则返回 true 值。</returns>\r\n\r\n    if ( event.eventPhase !== EventPhase.NONE ) {\r\n        /// 该事件已经被调度过一次时，抛出状态异常。\r\n        throw new Error(\"无效的事件对象。\");\r\n    }\r\n\r\n    if ( !event.bubbles || !this.parent ) {\r\n        /// TODU: 事件不参与冒泡行为，则直接在目标阶段调度。\r\n        event._target        = this._dispatcherRelatedTarget;\r\n        event._currentTarget = this._dispatcherRelatedTarget;\r\n        event._eventPhase    = EventPhase.AT_TARGET;\r\n\r\n        this._dispatchEvent( event );\r\n        return !event.defaultPrevented;\r\n    }\r\n\r\n    /// TODU: 构建事件传递路径。\r\n    var tempChain = [];\r\n    var tempToken = this;\r\n\r\n    for ( ;tempToken = tempToken.parent; ) {\r\n        tempChain.push( tempToken );\r\n    }\r\n\r\n    var selfIndex = tempChain.length;\r\n    var selfChain = [];\r\n\r\n    /// 1，捕获阶段（EventPhase.CAPTURING_PHASE）。\r\n    for ( var i = tempChain.length - 1; i >= 0; --i ) {\r\n        selfChain.push(tempChain[i]);\r\n    }\r\n\r\n    /// 2，冒泡阶段（EventPhase.AT_TARGET）。\r\n    selfChain.push(this);\r\n\r\n    /// 3，冒泡阶段（EventPhase.BUBBLING_PHASE）。\r\n    for ( var i = 0; i < tempChain.length; ++i ) {\r\n        selfChain.push(tempChain[i]);\r\n    }\r\n\r\n    /// TODU: 调度事件至事件流中。\r\n    for ( var i = 0; i < selfChain.length && !event._needStopPropagation; ++i ) {\r\n        /// 更新事件目标以及状态；\r\n        event._target = this._dispatcherRelatedTarget;\r\n        event._currentTarget = selfChain[i]._dispatcherRelatedTarget;\r\n        event._eventPhase = (selfIndex == i ? EventPhase.AT_TARGET : selfIndex < i ? EventPhase.BUBBLING_PHASE : EventPhase.CAPTURING_PHASE);\r\n\r\n        selfChain[i]._dispatchEvent(event);\r\n    }\r\n\r\n    return !event.defaultPrevented && !event._needStopPropagation;\r\n}\r\n\r\n\r\nEventDispatcher.prototype._dispatchEvent = function _dispatchEvent( event ) {\r\n    /// <summary>\r\n    /// 为指定状态的事件调用注册的侦听器来处理该事件。</summary>\r\n    /// <param name='event' type='Event'>\r\n    /// 必须，指定调用侦听器的事件对象。</param>\r\n\r\n    var sortedList = [];\r\n    /// WARING：在调用侦听器时，不能直接使用原始的寄存数组，因为在调用侦听器函数内部如果调用了删除事件侦听器的方法。\r\n    /// 如 `removeEventListener()`，原始的寄存数组会被修改。这将导致后续其他侦听器的调用发生不可预知的状况。\r\n\r\n    /// TODU: 捕获阶段仅触发 `_dispatcherCaptureRegister` 寄存对象中的侦听器。\r\n    if ( event.eventPhase == EventPhase.CAPTURING_PHASE ) {\r\n        sortedList = sortedList.concat(this._dispatcherCaptureRegister[event.type] || []);\r\n    }\r\n\r\n    /// TODU: 目标阶段触发所有（`_dispatcherCaptureRegister` 和 `_dispatcherBubbleRegister`）的侦听器。\r\n    if ( event.eventPhase == EventPhase.AT_TARGET ) {\r\n        sortedList = sortedList.concat(this._dispatcherCaptureRegister[event.type] || []);\r\n        sortedList = sortedList.concat(this._dispatcherBubbleRegister [event.type] || []);\r\n    }\r\n\r\n    /// TODU: 冒泡阶段仅触发 `_dispatcherBubbleRegister` 寄存对象中的侦听器。\r\n    if ( event.eventPhase == EventPhase.BUBBLING_PHASE ) {\r\n        sortedList = sortedList.concat(this._dispatcherBubbleRegister [event.type] || []);\r\n    }\r\n\r\n    /// TODU: 遍历并执行当前列出的所有的侦听器。\r\n    for ( var i = 0; i < sortedList.length && !event._needStopImmediatePropagation; ++i ) {\r\n        sortedList[i].handleEvent( event );\r\n    }\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\n\r\nfunction ScrollDirection () {\r\n    /// <summary>\r\n    /// 定义滚动方向常量。</summary>\r\n\r\n    throw new Error(\"无法创建静态类型的实例。\");\r\n}\r\n\r\n\r\nObject.defineProperties(ScrollDirection, {\r\n    /// 空值\r\n    NONE  : { value: 0x00 },\r\n\r\n    /// 轴\r\n    X_AXIS: { value: 0x01 },\r\n    Y_AXIS: { value: 0x02 },\r\n    Z_AXIS: { value: 0x03 },\r\n\r\n    /// XY\r\n    XY_AXIS: { value: 0x04 },\r\n    XZ_AXIS: { value: 0x05 },\r\n    YZ_AXIS: { value: 0x06 },\r\n\r\n    /// 方向\r\n    LEFT : { value: 0x10 },\r\n    RIGHT: { value: 0x11 },\r\n    UP   : { value: 0x12 },\r\n    DOWN : { value: 0x13 },\r\n    IN   : { value: 0x14 },\r\n    OUT  : { value: 0x15 }\r\n});","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\nfunction URLParams( search ) {\r\n    if ( !search ) {\r\n        return;\r\n    }\r\n\r\n    search = \"\" + search;\r\n\r\n    if ( search.indexOf(\"?\") == 0 || search.indexOf(\"#\") == 0 ) {\r\n\r\n        search = search.slice(1);\r\n    }\r\n\r\n    var urlParts = search.split(\"&\");\r\n\r\n    for ( var i = 0; i < urlParts.length; ++i ) {\r\n        var urlToken = urlParts[i];\r\n        var urlParam = urlToken.split(\"=\");\r\n\r\n        if ( !urlParam.length ) {\r\n            continue;\r\n        }\r\n\r\n        if ( urlParam.length == 1 ) {\r\n            this[urlParam[0]] = null;\r\n            continue;\r\n        }\r\n\r\n        var keyParam = urlParam[0];\r\n        var valParam = urlParam[1];\r\n\r\n        switch( valParam ) {\r\n            case \"null\" :\r\n            case \"undefined\" :\r\n                valParam = null;\r\n                break;\r\n            case \"true\" :\r\n                valParam = true;\r\n                break;\r\n            case \"false\" :\r\n                valParam = false;\r\n                break;\r\n            default :\r\n                var f = parseFloat(valParam);\r\n\r\n                if ( !isNaN(f) ) {\r\n                    valParam = f;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        this[keyParam] = valParam;\r\n    }\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../events/Event.js' />\r\n/// <reference path='../events/EventDispatcher.js' />\r\n\r\n\r\nvar Sprite = derive(EventDispatcher, function Sprite( selector ) {\r\n    /// <summary>\r\n    /// 显示对象基类，提供额外的 CSS 属性获取/设置。</summary>\r\n    /// <param name='selector' type='String'>\r\n    /// 必须，指定创建该类的 DOM 元素的 Zepto 选择器。</param>\r\n    EventDispatcher.call(this);\r\n\r\n    this._element = $(selector);\r\n    this._natural = this._element[0];\r\n    this._scaleX = 1;\r\n    this._scaleY = 1;\r\n    this._rotation   = 0;\r\n    this._translateX = 0;\r\n    this._translateY = 0;\r\n    this._hrwAccelEnabled = true;\r\n\r\n    if ( this._element.length != 1 ) {\r\n        throw new Error(\"当前选择器选中了零个或多个元素，但 Sprite 必须且只能包含有一个有效的元素。\");\r\n    }\r\n\r\n    Sprite.reg(this);\r\n});\r\n\r\n\r\nObject.defineProperties(Sprite.prototype, {\r\n    /// <field type='Zepto'>\r\n    /// 获取显示对象的 Zepto 元素。</field>\r\n    element: {\r\n        get: function () { return this._element; }\r\n    },\r\n\r\n    /// <field type='HTMLElement'>\r\n    /// 获取显示对象的 DOM 元素。</field>\r\n    natural: {\r\n        get: function () { return this._natural; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否启用 3d 加速渲染变换矩阵。<field>\r\n    hrwAccelEnabled: {\r\n        get: function () { return this._hrwAccelEnabled; },\r\n        set: function( value ) { this._hrwAccelEnabled = value; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取元素的宽度。</field>\r\n    width: {\r\n        get: function () { return this.natural.clientWidth; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取元素的高度。</field>\r\n    height: {\r\n        get: function () { return this.natural.clientHeight; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 x 轴坐标。</field>\r\n    x: {\r\n        get: function () { return this._translateX; },\r\n        set: function( value ) { \r\n            this._translateX = value; \r\n            this._applyTransform(); \r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 y 轴坐标。</field>\r\n    y: {\r\n        get: function () { return this._translateY; },\r\n        set: function( value ) {\r\n            this._translateY = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 x 轴缩放量。</field>\r\n    scaleX: {\r\n        get: function () { return this._scaleX; },\r\n        set: function( value ) {\r\n            this._scaleX = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的 y 轴缩放量。</field>\r\n    scaleY: {\r\n        get: function () { return this._scaleY; },\r\n        set: function( value ) {\r\n            this._scaleY = value;\r\n            this._applyTransform();\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取/设置元素的旋转角度。</field>\r\n    rotation: {\r\n        get: function () { return this._rotation; },\r\n        set: function( value ) {\r\n            this._rotation = value;\r\n            this._applyTransform();\r\n        }\r\n    }\r\n});\r\n\r\n\r\nSprite.prototype._applyTransform = function _applyTransform () {\r\n    /// <summary>\r\n    /// 对元素应用变换矩阵。</summary>\r\n    this._setTransform(\r\n        'scale(' + this._scaleX + ',' + this._scaleY + ')' +\r\n        'rotate(' + this._rotation + 'deg)' +\r\n        'translateX(' + this._translateX + 'px)' +\r\n        'translateY(' + this._translateY + 'px)' + (this._hrwAccelEnabled ? 'translateZ(0px)' : '')\r\n    );\r\n}\r\n\r\n\r\nSprite.prototype._setTransform = function _setTransform( transform ) {\r\n    /// <summary>\r\n    /// 设置元素 transform 样式。</summary>\r\n    /// <param name='transform' type='String'>\r\n    /// 必须，指定元素的 transform 属性值。</param>\r\n\r\n    this.natural.style.transform = \r\n    this.natural.style.webkitTransform = transform;\r\n}\r\n\r\n\r\nSprite.prototype.transform = function transform( x, y, scaleX, scaleY, rotation ) {\r\n    /// <summary>\r\n    /// 同时设置多个 transform 属性值。</summary>\r\n    /// <param name='x' type='Number' optional='true'>\r\n    /// 可选，设置元素在 x 轴上的偏移量。</param>\r\n    /// <param name='y' type='Number' optional='true'>\r\n    /// 可选，设置元素在 y 轴上的偏移量。</param>\r\n    /// <param name='scaleX' type='Number' optional='true'>\r\n    /// 可选，设置元素在 x 轴上的缩放量。</param>\r\n    /// <param name='scaleY' type='Number' optional='true'>\r\n    /// 可选，设置元素在 y 轴上的缩放量。</param>\r\n    /// <param name='rotation' type='Number' optional='true'>\r\n    /// 可选，设置元素的旋转角度。</param>\r\n\r\n    if ( x        !== null && typeof x        != \"undefined\" ) { this._translateX = x; }\r\n    if ( y        !== null && typeof y        != \"undefined\" ) { this._translateY = y; }\r\n    if ( scaleX   !== null && typeof scaleX   != \"undefined\" ) { this._scaleX     = scaleX; }\r\n    if ( scaleY   !== null && typeof scaleY   != \"undefined\" ) { this._scaleY     = scaleY; }\r\n    if ( rotation !== null && typeof rotation != \"undefined\" ) { this._rotation   = rotation; }\r\n\r\n    this._applyTransform();\r\n}\r\n\r\n\r\n/// ================================================================================\r\n/// SPID \r\n/// ================================================================================\r\nvar SPID_POINTER = 0;\r\nvar SPID_DICTION = {};\r\n\r\n\r\nSprite.reg = function reg( sprite ) {\r\n    /// <summary>\r\n    /// 注册 Sprite 类型的实例，以便通过 Sprite.get() 获取实例的引用。</summary>\r\n    /// <param name='sprite' type='Sprite'>\r\n    /// 必须，指定注册到引用池中的 Sprite 类型的实例。</param>\r\n    /// <returns type='Sprite'>\r\n    /// 返回对 Sprite 实例的引用。</returns>\r\n\r\n    if ( !(sprite instanceof Sprite) ) {\r\n        throw new Error(\"Sprite: reg() 方法的注册对象必须为 Sprite 类型的实例。\");\r\n    }\r\n\r\n    SPID_DICTION[SPID_POINTER] = sprite;\r\n    sprite.natural.setAttribute(\"data-sprite\", SPID_POINTER++);\r\n\r\n    return sprite;\r\n}\r\n\r\n\r\nSprite.get = function get( spid ) {\r\n    /// <summary>\r\n    /// 通过 SPID 获取引用池中指定的 Sprite 实例对象。<br/>\r\n    /// 支持以下方式：                  <br/>\r\n    ///     Sprite.get('spid');       <br/>\r\n    ///     Sprite.get(HTMLElement);  <br/>\r\n    ///     Sprite.get(Zepto);</summary>\r\n    /// <param name='spid' type='String'>\r\n    /// 必须，指定 Sprite 的 spid 值。可以是 String|HTMLElement|ZeptoElement。</param>\r\n\r\n    if ( spid === null || typeof spid == \"undefined\" ) {\r\n\r\n        return null;\r\n    }\r\n\r\n    if ( typeof spid == \"object\" ) {\r\n\r\n        if ( typeof spid.getAttribute == \"function\" ) {\r\n\r\n            return SPID_DICTION[spid.getAttribute(\"data-sprite\")] || null;\r\n        }\r\n\r\n        else {\r\n\r\n            return SPID_DICTION[spid[0].getAttribute(\"data-sprite\")] || null;\r\n        }\r\n    }\r\n\r\n    return SPID_DICTION[\"\" + spid] || null;\r\n}\r\n\r\n\r\nSprite.cls = function cls( spid ) {\r\n    /// <summary>\r\n    /// 通过 SPID 删除引用池中指定的 Sprite 实例对象。<br/>\r\n    /// 支持以下方式：                  <br/>\r\n    ///     Sprite.cls('spid');       <br/>\r\n    ///     Sprite.cls(HTMLElement);  <br/>\r\n    ///     Sprite.cls(Zepto);</summary>\r\n    /// <param name='spid' type='String'>\r\n    /// 必须，指定 Sprite 的 spid 值。可以是 String|HTMLElement|ZeptoElement。</param>\r\n\r\n    if ( spid === null || typeof spid == \"undefined\" ) {\r\n        \r\n        return;\r\n    }\r\n\r\n    if ( spid instanceof Sprite ) {\r\n\r\n        SPID_DICTION[spid.natural.getAttribute(\"data-sprite\")] = null;\r\n        return;\r\n    }\r\n\r\n    if ( typeof spid == \"object\" ) {\r\n\r\n        if ( typeof spid.getAttribute == \"function\" ) {\r\n\r\n            SPID_DICTION[spid.getAttribute(\"data-sprite\")] = null;\r\n        }\r\n\r\n        else {\r\n\r\n            SPID_DICTION[spid[0].getAttribute(\"data-sprite\")] = null;\r\n        }\r\n    }\r\n\r\n    SPID_DICTION[\"\" + spid] = null;\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n\r\n\r\n/// <var type='Function'>\r\n/// 启动一个同步页面的计时器。</var>\r\nvar requestAnimation = window.requestAnimationFrame \r\n                     || window.webkitRequestAnimationFrame;\r\n\r\n/// <var type='Function'>\r\n/// 取消一个同步页面的计时器。</var>\r\nvar cancelAnimation  = window.cancelAnimationFrame\r\n                     || window.webkitCancelAnimationFrame;\r\n\r\n//var __TIMER_OBJ__ = null;\r\n//var __TIMER_KEY__ = null;\r\n\r\n\r\n//if ( window.performance ) {\r\n//    if ( typeof window.performance.now == \"function\" ) {\r\n//        __TIMER_OBJ__ = window.performance;\r\n//        __TIMER_KEY__ = \"now\";\r\n//    }\r\n\r\n//    else if ( typeof window.performance.webkitNow == \"function\" ) {\r\n//        __TIMER_OBJ__ = window.performance;\r\n//        __TIMER_KEY__ = \"webkitNow\";\r\n//    }\r\n//}\r\n\r\n\r\n//if ( !__TIMER_OBJ__ || !__TIMER_KEY__ ) {\r\n//    __TIMER_OBJ__ = Date;\r\n//    __TIMER_KEY__ = \"now\";\r\n//}\r\n\r\n\r\n//function timeNow() {\r\n//    /// <summary>\r\n//    /// 获取系统当前时间戳（浮点数）。</summary>\r\n\r\n//    return __TIMER_OBJ__[__TIMER_KEY__]();\r\n//}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../core/timing.js' />\r\n/// <reference path='../events/Event.js' />\r\n/// <reference path='./Sprite.js' />\r\n/// <reference path='./ScrollDirection.js' />\r\n\r\n\r\nvar ScrollContainer = derive(Sprite, function ScrollContainer( selector ) {\r\n    /// <summary>\r\n    /// 自定义滚动容器。</summary>\r\n    Sprite.call(this, selector);\r\n\r\n    this._content = new Sprite(this._element.children(\"content\"));\r\n    this._scrollX = 0;\r\n    this._scrollY = 0;\r\n    this._scrollRealX = 0;\r\n    this._scrollRealY = 0;\r\n    this._bounces = true;\r\n    this._scrollXEnabled = false;\r\n    this._scrollYEnabled = true;\r\n    this._scrollXIndicator = null;\r\n    this._scrollYIndicator = null;\r\n    this._scrollXTracker = null;\r\n    this._scrollYTracker = null;\r\n    this._disableIndicator = false;\r\n    this._resizeIndicator  = true;\r\n\r\n    /// frame\r\n    this._contentWidth   = 0;\r\n    this._contentHeight  = 0;\r\n    this._viewportWidth  = 0;\r\n    this._viewportHeight = 0;\r\n\r\n    this._lockAtDir = ScrollDirection.NONE;\r\n    this._startXval = 0;\r\n    this._startYval = 0;\r\n    this._speedXval = 0;\r\n    this._speedYval = 0;\r\n    this._amplsXval = 0;\r\n    this._amplsYval = 0;\r\n    this._touchXval = 0;\r\n    this._touchYval = 0;\r\n    this._targtXval = 0;\r\n    this._targtYval = 0;\r\n    this._velocXval = 0;\r\n    this._velocYval = 0;\r\n    this._distsXval = 0;\r\n    this._distsYval = 0;\r\n    this._forceXval = 0;\r\n    this._forceYval = 0;\r\n    this._edgesXval = 0;\r\n    this._edgesYval = 0;\r\n    this._tickerInt = 0;\r\n    this._timestamp = 0;\r\n    this._pullstamp = 0;\r\n    this._scrollInt = 0;\r\n    this._pullbkInt = 0;\r\n    this._bounceInt = 0;\r\n    this._threshold = 5;\r\n    this._timedelay = 0;\r\n    this._amplsFactor    = 0.5;\r\n    this._timeConstant   = 650;\r\n    this._elasticFactor  = 0.35;\r\n    this._bouncesFactor  = 0.05;\r\n    this._timePullFactor = 0.15;\r\n    this._forceDamping   = 0.85;\r\n    this._speedThreshold = 10;\r\n    //this._lastUpdateTime = -1;\r\n    this._maxTopEdgeBounces = -1;\r\n    this._doAutoScroll        = this._doAutoScroll.bind(this);\r\n    this._doPullback          = this._doPullback.bind(this);\r\n    this._doForceBounces      = this._doForceBounces.bind(this);\r\n    this._doScrollTo          = this._doScrollTo.bind(this);\r\n    this._calcTouchesSpeed    = this._calcTouchesSpeed.bind(this);\r\n    this._calcTouchesPosition = this._calcTouchesPosition.bind(this);\r\n    this._drawScrollContainer = this._drawScrollContainer.bind(this);\r\n\r\n    this._initScrollContainer();\r\n});\r\n\r\n\r\nObject.defineProperties(ScrollContainer.prototype, {\r\n    /// <filed type='Number'>\r\n    /// 获取/设置容器的 X 轴滚动位置。</field>\r\n    scrollX: {\r\n        get: function () { return this._scrollX; },\r\n        set: function( value ) {\r\n            this._scrollX = value;\r\n\r\n            if ( (this._scrollX >> 0) !== (this._scrollRealX) ) {\r\n                this._scrollRealX = this._scrollX >> 0;\r\n                this._drawScrollPosition();\r\n            }\r\n        }\r\n    },\r\n\r\n    /// <filed type='Number'>\r\n    /// 获取/设置容器的 Y 轴滚动位置。</field>\r\n    scrollY: {\r\n        get: function () { return this._scrollY; },\r\n        set: function( value ) {\r\n            if ( this.maxTopEdgeBounces >= 0 ) {\r\n                value = Math.min(this.maxTopEdgeBounces, value);\r\n            }\r\n\r\n            this._scrollY = value;\r\n\r\n            if ( (this._scrollY >> 0) !== (this._scrollRealY) ) {\r\n                this._scrollRealY = this._scrollY >> 0;\r\n                this._drawScrollPosition();\r\n            }\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 指定滚动至边缘时，是立刻停止还是执行回弹效果。</field>\r\n    bounces: {\r\n        get: function () { return this._bounces; },\r\n        set: function( value ) { this._bounces = value; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 指示是否显示滚动位置指示器。</field>\r\n    disableIndicator: {\r\n        get: function () { return this._disableIndicator; },\r\n        set: function( value ) {\r\n            this._disableIndicator = value;\r\n        }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 指示是否动态调整滚动位置指示器的大小。</field>\r\n    resizeIndicator: {\r\n        get: function () { return this._resizeIndicator; },\r\n        set: function( value ) {\r\n            this._resizeIndicator = value;\r\n        }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取最大 X 轴滚动范围。（注意：计算百分比时，0 不能作为分母！）</field>\r\n    scrollWidth: {\r\n        get: function () { return Math.max(0, this.contentWidth - this.viewportWidth); }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取最大 Y 轴滚动范围。（注意：计算百分比时，0 不能作为分母！）</field>\r\n    scrollHeight: {\r\n        get: function () { return Math.max(0, this.contentHeight - this.viewportHeight); }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取内容区的宽度。</field>\r\n    contentWidth: {\r\n        get: function () { return this._contentWidth; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取内容区的高度。</field>\r\n    contentHeight: {\r\n        get: function () { return this._contentHeight; }\r\n    },\r\n\r\n    /// <filed type='Number'>\r\n    /// 获取滚动区域的宽度。</field>\r\n    viewportWidth: {\r\n        get: function () { return this._viewportWidth; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 获取滚动区域的高度。</field>\r\n    viewportHeight: {\r\n        get: function () { return this._viewportHeight; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否允许容器在 X 轴滚动。</field>\r\n    scrollXEnabled: {\r\n        get: function () { return this._scrollXEnabled; },\r\n        set: function( value ) { this._scrollXEnabled = value; }\r\n    },\r\n\r\n    /// <field type='Boolean'>\r\n    /// 获取/设置是否允许容器在 Y 轴滚动。</field>\r\n    scrollYEnabled: {\r\n        get: function () { return this._scrollYEnabled; },\r\n        set: function( value ) { this._scrollYEnabled = value; }\r\n    },\r\n\r\n    /// <field type='HTMLElement'>\r\n    /// 获取内容元素容器对象。</field>\r\n    content: {\r\n        get: function () { return this._content; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 设置 touchmove 阀值。</field>\r\n    threshold: {\r\n        get: function () { return this._threshold; },\r\n        set: function( value ) { this._threshold = value; }\r\n    },\r\n\r\n    /// <field type='Number'>\r\n    /// 限制头部最大可拉动距离。</field>\r\n    maxTopEdgeBounces: {\r\n        get: function () { return this._maxTopEdgeBounces; },\r\n        set: function( value ) {\r\n            this._maxTopEdgeBounces = value;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nScrollContainer.prototype.updateFrameSizes = function updateFrameSizes() {\r\n    /// <summary>\r\n    /// 更新滚动条区域；</summary>\r\n\r\n    this._contentWidth  = this._content.width;\r\n    this._contentHeight = this._content.height;\r\n    this._viewportWidth = this.width;\r\n    this._viewportHeight= this.height;\r\n\r\n\r\n    //this._contentWidth  = this._content.natural.scrollWidth;\r\n    //this._contentHeight = this._content.natural.scrollHeight;\r\n    //this._viewportWidth = this._content.natural.offsetWidth;\r\n    //this._viewportHeight= this._content.natural.offsetHeight;\r\n}\r\n\r\n\r\nScrollContainer.prototype._initScrollContainer = function _initScrollContainer () {\r\n    /// <summary>\r\n    /// 初始化构造函数。</summary>\r\n\r\n    //this._content.natural.addEventListener(\"touchmove\", function( evt ) {\r\n    //    console.log(\"move\");\r\n    //    evt.stopPropagation();\r\n\r\n    //});\r\n\r\n    this.natural.addEventListener(\"touchstart\",  this._drawScrollContainer);\r\n}\r\n\r\n\r\nScrollContainer.prototype._drawScrollPosition = function _drawScrollPosition() {\r\n    /// <summary>\r\n    /// 对元素应用滚动位置属性。</summary>\r\n    \r\n    //this._setScrollPosition(this._scrollRealX, this._scrollRealX);\r\n    //this._content.transform(this._scrollRealX, this._scrollRealY);\r\n    var style = this._content.natural.style;\r\n\r\n    style.transform =\r\n    style.webkitTransform = 'translateY(' + this._scrollRealY + 'px) translateZ(0px)';\r\n\r\n    /// 调度位置更新事件；\r\n    this.dispatchEvent( new Event(\"scroll\", false, false) );\r\n}\r\n\r\n\r\nScrollContainer.prototype._setScrollPosition = function _setScrollPosition( scrollX, scrollY ) {\r\n    /// <summary>\r\n    /// 根据滚动位置更新 DOM 位置。</summary>\r\n\r\n    //if ( scrollX > this._maxEdgeBounces ) {\r\n    //    scrollX = this._maxEdgeBounces;\r\n    //}\r\n\r\n    //if ( scrollY > this._maxEdgeBounces ) {\r\n    //    scrollY = this._maxEdgeBounces;\r\n    //}\r\n\r\n    //if ( scrollX < -this.scrollWidth - this._maxEdgeBounces ) {\r\n    //    scrollX = -this.scrollWidth - this._maxEdgeBounces;\r\n    //}\r\n\r\n    //if ( scrollY < -this.scrollHeight - this._maxEdgeBounces ) {\r\n    //    scrollY = -this.scrollHeight - this._maxEdgeBounces;\r\n    //}\r\n\r\n    /// TIPS: 子类可自行覆盖实现下拉刷新等效果。\r\n    //this._content.transform(scrollX, scrollY);\r\n    //this._content.natural.scrollTop = -scrollY;\r\n}\r\n\r\n\r\nScrollContainer.prototype._setupTouchEvents = function _setupTouchEvents( isSetup ) {\r\n    /// <summary>\r\n    /// 添加/删除滚动容器的 Touch 侦听器。</summary>\r\n    /// <param name='isSetup' type='Boolean'>\r\n    /// 必须，指示是添加侦听器，还是删除侦听器。</param>\r\n\r\n    if ( isSetup ) {\r\n        this.natural.addEventListener(\"touchmove\",   this._drawScrollContainer);\r\n        this.natural.addEventListener(\"touchend\",    this._drawScrollContainer);\r\n        this.natural.addEventListener(\"touchcancel\", this._drawScrollContainer);\r\n    }\r\n    \r\n    else {\r\n        this.natural.removeEventListener(\"touchmove\",   this._drawScrollContainer);\r\n        this.natural.removeEventListener(\"touchend\",    this._drawScrollContainer);\r\n        this.natural.removeEventListener(\"touchcancel\", this._drawScrollContainer);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._drawScrollContainer = function _drawScrollContainer( evt ) {\r\n    /// <summary>\r\n    /// 处理滚动容器触摸事件。</summary>\r\n    \r\n    if ( evt.type == \"touchstart\" ) {\r\n        var dt = this._calcTouchesPosition(evt);\r\n\r\n        if ( this._hasTouched(evt, 2) ) {\r\n            this._touchXval = dt[0];\r\n            this._touchYval = dt[1];\r\n            this._amplsXval = 0;\r\n            this._amplsYval = 0;\r\n            this._velocXval = 0;\r\n            this._velocYval = 0;\r\n            this._forceXval = 0;\r\n            this._forceYval = 0;\r\n            return;\r\n        }\r\n\r\n        /// 更新 frame 大小；\r\n        this.updateFrameSizes();\r\n\r\n        cancelAnimation(this._pullbkInt);\r\n        cancelAnimation(this._scrollInt);\r\n        cancelAnimation(this._bounceInt);\r\n        cancelAnimation(this._tickerInt);\r\n        \r\n        this._touchXval = dt[0];\r\n        this._touchYval = dt[1];\r\n        this._amplsXval = 0;\r\n        this._amplsYval = 0;\r\n        this._velocXval = 0;\r\n        this._velocYval = 0;\r\n        this._forceXval = 0;\r\n        this._forceYval = 0;\r\n        //this._speedXval = 0;\r\n        //this._speedYval = 0;\r\n        this._startXval = this.scrollX;\r\n        this._startYval = this.scrollY;\r\n        this._tickerInt = requestAnimation(this._calcTouchesSpeed);\r\n        this._lockAtDir = ScrollDirection.NONE;\r\n\r\n        this._setupTouchEvents(true);\r\n        //this._showIndicator(0, 0);\r\n        //this._showIndicator(1, 0);\r\n        return;\r\n    }\r\n    \r\n    if ( evt.type == \"touchmove\" ) {\r\n\r\n        var dt = this._calcTouchesPosition(evt);\r\n        var movedXval = dt[0] - this._touchXval;\r\n        var movedYval = dt[1] - this._touchYval;\r\n        var doPrevent = false;\r\n        //var currTime  = Date.now();\r\n\r\n\r\n        if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n            if ( Math.abs(movedXval) > this._threshold ) {\r\n                this._lockAtDir = ScrollDirection.X_AXIS;\r\n            }\r\n\r\n            if ( Math.abs(movedYval) > this._threshold ) {\r\n                if ( this._lockAtDir == ScrollDirection.X_AXIS ) {\r\n                    this._lockAtDir = ScrollDirection.XY_AXIS;\r\n                }\r\n\r\n                else {\r\n                    this._lockAtDir = ScrollDirection.Y_AXIS;\r\n                }\r\n            }\r\n\r\n            if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if ( this.scrollXEnabled && (this._lockAtDir == ScrollDirection.X_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            doPrevent = true;\r\n\r\n            //if ( currTime - this._lastUpdateTime >= 16 ) {\r\n            //    this._lastUpdateTime = currTime;\r\n\r\n                if ( this.scrollX > 0 || this.scrollX < -this.scrollWidth ) {\r\n                    this.scrollX = this.scrollX + movedXval * this._elasticFactor;\r\n                }\r\n\r\n                else {\r\n                    this.scrollX = this.scrollX + movedXval;\r\n                }\r\n\r\n                this._showIndicator(0, 1);\r\n            //}\r\n        } \r\n            \r\n        if ( this.scrollYEnabled && (this._lockAtDir == ScrollDirection.Y_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            doPrevent = true;\r\n            \r\n            //if ( currTime - this._lastUpdateTime >= 16 ) {\r\n            //    this._lastUpdateTime = currTime;\r\n\r\n                if ( this.scrollY > 0 || this.scrollY < -this.scrollHeight ) {\r\n                    this.scrollY = this.scrollY + movedYval * this._elasticFactor;\r\n                }\r\n\r\n                else {\r\n                    this.scrollY = this.scrollY + movedYval;\r\n                }\r\n\r\n                this._showIndicator(1, 1);\r\n            //}\r\n        }\r\n\r\n        if ( doPrevent ) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n\r\n        this._touchXval = dt[0];\r\n        this._touchYval = dt[1];\r\n        return;\r\n    }\r\n\r\n    if ( evt.type == \"touchend\" || evt.type == \"touchcancel\" ) {\r\n        if ( this._hasTouched(evt, 1) ) {\r\n            var dt = this._calcTouchesPosition(evt);\r\n\r\n            this._touchXval  = dt[0];\r\n            this._touchYval  = dt[1];\r\n            return;\r\n        }\r\n        \r\n        cancelAnimation(this._pullbkInt);\r\n        cancelAnimation(this._scrollInt);\r\n        cancelAnimation(this._bounceInt);\r\n        cancelAnimation(this._tickerInt);\r\n\r\n        this._setupTouchEvents(false);\r\n\r\n        var doPullXs = false;\r\n        var doPullYs = false;\r\n        var doScroll = false;\r\n        \r\n        if ( this.scrollXEnabled && this.scrollX > 0 ) {\r\n            doPullXs = true;\r\n            this._amplsXval = -this.scrollX;\r\n            this._targtXval = this.scrollX + this._amplsXval;\r\n        }\r\n        \r\n        else if ( this.scrollXEnabled && this.scrollX < -this.scrollWidth ) {\r\n            doPullXs = true;\r\n            this._amplsXval = - this.scrollWidth - this.scrollX;\r\n            this._targtXval = this.scrollX + this._amplsXval;\r\n        }\r\n        \r\n        if ( this.scrollYEnabled && this.scrollY > 0 ) {\r\n            doPullYs = true;\r\n            this._amplsYval = -this.scrollY;\r\n            this._targtYval = this.scrollY + this._amplsYval;\r\n        }\r\n        \r\n        else if ( this.scrollYEnabled && (this.scrollY < -this.scrollHeight) ) {\r\n            doPullYs = true;\r\n            this._amplsYval = -this.scrollHeight - this.scrollY;\r\n            this._targtYval = this.scrollY + this._amplsYval;\r\n        }\r\n\r\n        if ( !(doPullXs) && (this._lockAtDir == ScrollDirection.X_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            if ( Math.abs(this._speedXval) >= this._speedThreshold ) {\r\n                doScroll = true;\r\n                this._velocXval = this._amplsFactor * this._speedXval;\r\n                this._distsXval = this.scrollX + this._velocXval;\r\n            }\r\n\r\n            else {\r\n                this._showIndicator(0, 0);\r\n            }\r\n        }\r\n\r\n        if ( !(doPullYs) && (this._lockAtDir == ScrollDirection.Y_AXIS || this._lockAtDir == ScrollDirection.XY_AXIS) ) {\r\n            if ( Math.abs(this._speedYval) >= this._speedThreshold ) {\r\n                doScroll = true;\r\n                this._velocYval = this._amplsFactor * this._speedYval;\r\n                this._distsYval = this.scrollY + this._velocYval;\r\n            }\r\n\r\n            else {\r\n                this._showIndicator(1, 0);\r\n            }\r\n        }\r\n\r\n        if ( this._lockAtDir == ScrollDirection.NONE ) {\r\n            this._showIndicator(0, 0);\r\n            this._showIndicator(1, 0);\r\n        }\r\n\r\n        if ( doPullXs || doPullYs ) {\r\n            this._pullstamp = Date.now();\r\n            this._pullbkInt = requestAnimation(this._doPullback);\r\n            this.dispatchEvent(new Event(\"pull\", false, false));\r\n        }\r\n\r\n        if ( doScroll ) {\r\n            this._timestamp = Date.now();\r\n            this._scrollInt = requestAnimation(this._doAutoScroll);\r\n\r\n            var dragEvent = new Event(\"drag\", false, false);\r\n                dragEvent.vx = this._velocXval;\r\n                dragEvent.vy = this._velocYval;\r\n\r\n            this.dispatchEvent( dragEvent );\r\n        }\r\n        \r\n        //if ( evt.type == \"touchend\" && this._lockAtDir == ScrollDirection.NONE) {\r\n        //    /// 触发 tap 事件；\r\n        //    var tapEvent = document.createEvent(\"Event\");\r\n        //        tapEvent.initEvent(\"tap\", true, true);\r\n\r\n        //    var target = evt.target;\r\n        //    target.dispatchEvent( tapEvent);\r\n        //}\r\n\r\n        return;\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._calcTouchesSpeed = function _calcTouchesSpeed () {\r\n    /// <summary>\r\n    /// 计算手指移动速度。</summary>\r\n    var now = Date.now();\r\n    var elapsed = now - this._timestamp;\r\n    \r\n    var deltaXval = this.scrollX - this._startXval;\r\n    var deltaYval = this.scrollY - this._startYval;\r\n\r\n    this._startXval = this.scrollX;\r\n    this._startYval = this.scrollY;\r\n    this._speedXval = 0.8 * (1000 * deltaXval / (1 + elapsed)) + 0.2 * this._speedXval;\r\n    this._speedYval = 0.8 * (1000 * deltaYval / (1 + elapsed)) + 0.2 * this._speedYval;\r\n\r\n    this._timestamp = now;\r\n    this._tickerInt = requestAnimation(this._calcTouchesSpeed);\r\n}\r\n\r\n\r\nScrollContainer.prototype._calcTouchesPosition = function _calcTouchesPosition( evt ) {\r\n    /// <summary>\r\n    /// 计算手指移动位置。</summary>\r\n\r\n    if ( evt.type == \"touchstart\" \r\n      || evt.type == \"touchend\" \r\n      || evt.type == \"touchmove\" \r\n      || evt.type == \"touchcancel\" ) {\r\n\r\n        return this._getAverageOfTouches(evt.touches);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._getAverageOfTouches = function _getAverageOfTouches( touches ) {\r\n    /// <summary>\r\n    /// 计算所有触摸点的平均值。</summary>\r\n\r\n    for ( var i = 0, dt = [0, 0]; i < touches.length; ++i ) {\r\n\r\n        if ( i == 0 ) {\r\n            dt[0] = touches[i].clientX;\r\n            dt[1] = touches[i].clientY;\r\n        }\r\n\r\n        else {\r\n            dt[0] = (dt[0] + touches[i].clientX) * 0.5;\r\n            dt[1] = (dt[1] + touches[i].clientY) * 0.5;\r\n        }\r\n    }\r\n\r\n    return dt;\r\n}\r\n\r\n\r\nScrollContainer.prototype._hasTouched = function _hasTouched( evt, count ) {\r\n    /// <summary>\r\n    /// 判断是否按下了指定数量的手指。</summary>\r\n\r\n    if ( evt.type == \"touchstart\" \r\n      || evt.type == \"touchmove\" \r\n      || evt.type == \"touchend\" \r\n      || evt.type == \"touchcancel\" ) {\r\n\r\n        return (evt.touches.length >= count);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nScrollContainer.prototype._doAutoScroll = function _doAutoScroll () {\r\n    /// <summary>\r\n    /// 根据移动速度自动滚动一定距离。</summary>\r\n\r\n    var fact = Math.exp((this._timestamp - Date.now()) / (this._timeConstant));\r\n    var dist = 0;\r\n    var next = false;\r\n    var bounce = false;\r\n\r\n    if ( this._velocXval ) {\r\n        dist = -this._velocXval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            dist = this._distsXval + dist;\r\n            this._forceXval = 0.8 * (dist - this.scrollX) + 0.2 * this._forceXval;\r\n            this.scrollX = dist;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            dist = this._distsXval;\r\n            this._forceXval = 0.8 * (dist - this.scrollX) + 0.2 * this._forceXval;\r\n            this.scrollX = dist;\r\n            this._velocXval = 0;\r\n            this._showIndicator(0, 0);\r\n        }\r\n\r\n        if ( dist > 0 || dist < -this.scrollWidth ) {\r\n            next = false;\r\n            this._velocXval = 0;\r\n            this.scrollX = dist > 0 ? 0 : -this.scrollWidth;\r\n            \r\n            if ( this._bounces ) {\r\n                bounce = true;\r\n                this._edgesXval = dist > 0 ? 0 : dist < -this.scrollWidth ? -this.scrollWidth : 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( this._velocYval ) {\r\n        dist = -this._velocYval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            dist = this._distsYval + dist;\r\n            this._forceYval = 0.8 * (dist - this.scrollY) + 0.2 * this._forceYval;\r\n            this.scrollY = dist;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            dist = this._distsYval;\r\n            this._forceYval = 0.8 * (dist - this.scrollY) + 0.2 * this._forceYval;\r\n            this.scrollY = dist;\r\n            this._velocYval = 0;\r\n            this._showIndicator(1, 0);\r\n        }\r\n\r\n        if ( dist > 0 || dist < -this.scrollHeight ) {\r\n            next = false;\r\n            this._velocYval = 0;\r\n            this.scrollY = dist > 0 ? 0 : -this.scrollHeight;\r\n\r\n            if ( this._bounces ) {\r\n                bounce = true;\r\n                this._edgesYval = dist > 0 ? 0 : dist < -this.scrollHeight ? -this.scrollHeight : 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._pullbkInt = requestAnimation(this._doAutoScroll);\r\n    }\r\n\r\n    if ( bounce ) {\r\n        cancelAnimation(this._bounceInt);\r\n        this._bounceInt = requestAnimation(this._doForceBounces);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._doPullback = function _doPullback () {\r\n    /// <summary>\r\n    /// 边缘拉回。</summary>\r\n\r\n    var fact = Math.exp((this._pullstamp - Date.now()) / (this._timeConstant * this._timePullFactor));\r\n    var dist = 0;\r\n    var next = false;\r\n\r\n    if ( this._amplsXval ) {\r\n        dist = -this._amplsXval * fact;\r\n\r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            this.scrollX = this._targtXval + dist;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            this.scrollX = this._targtXval;\r\n            this._amplsXval = 0;\r\n            this._showIndicator(0, 0);\r\n        }\r\n    }\r\n\r\n    if ( this._amplsYval ) {\r\n        dist = -this._amplsYval * fact;\r\n        \r\n        if ( Math.abs(dist) >= 0.5 ) {\r\n            next = true;\r\n            this.scrollY = this._targtYval + dist;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            this.scrollY = this._targtYval;\r\n            this._amplsYval = 0;\r\n            this._showIndicator(1, 0);\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._pullbkInt = requestAnimation(this._doPullback);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._doForceBounces = function _doForceBounces() {\r\n    /// <summary>\r\n    /// 边缘回弹。</summary>\r\n\r\n    var declsX = 0;\r\n    var declsY = 0;\r\n    var next = false;\r\n\r\n    if ( !this._velocXval && this._forceXval ) {\r\n        declsX = (this._edgesXval - this.scrollX) * this._bouncesFactor;\r\n\r\n        this._forceXval += declsX;\r\n        this._forceXval *= this._forceDamping;\r\n\r\n        if ( Math.abs(this._forceXval) >= 0.001 ) {\r\n            next = true;\r\n            this.scrollX += this._forceXval * this._elasticFactor;\r\n            this._showIndicator(0, 1);\r\n        }\r\n\r\n        else {\r\n            this._forceXval = 0;\r\n            this.scrollX = this._edgesXval;\r\n            this._showIndicator(0, 0);\r\n        }\r\n    }\r\n\r\n    if ( !this._velocYval && this._forceYval ) {\r\n        declsY = (this._edgesYval - this.scrollY) * this._bouncesFactor;\r\n\r\n        this._forceYval += declsY;\r\n        this._forceYval *= this._forceDamping;\r\n\r\n        if ( Math.abs(this._forceYval) >= 0.001 ) {\r\n            next = true;\r\n            this.scrollY += this._forceYval * this._elasticFactor;\r\n            this._showIndicator(1, 1);\r\n        }\r\n\r\n        else {\r\n            this._forceYval = 0;\r\n            this.scrollY = this._edgesYval;\r\n            this._showIndicator(1, 0);\r\n        }\r\n    }\r\n\r\n    if ( next ) {\r\n        this._bounceInt = requestAnimation(this._doForceBounces);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype.scrollTo = function scrollTo( time, x, y ) {\r\n    /// 手动滚动；\r\n    this._stopAllDelayTimer();\r\n\r\n    this._distsXval = x;\r\n    this._distsYval = y;\r\n    this._velocXval = this._distsXval - this.scrollX;\r\n    this._velocYval = this._distsYval - this.scrollY;\r\n    this._timedelay = time;\r\n    this._timestamp = Date.now();\r\n    this._scrollInt = requestAnimation(this._doScrollTo);\r\n}\r\n\r\n\r\nScrollContainer.prototype._doScrollTo = function _doScrollTo() {\r\n    var time = Date.now() - this._timestamp;\r\n    var next = false;\r\n\r\n    if ( (time < this._timedelay) && (this._timedelay > 0) ) {\r\n        if ( Math.abs(this._velocXval) > 0.001 ) {\r\n            next = true;\r\n            this.scrollX = (this._distsXval - this._velocXval) + this._velocXval * (time / this._timedelay);\r\n        }\r\n\r\n        if ( Math.abs(this._velocYval) > 0.001 ) {\r\n            next = true;\r\n            this.scrollY = (this._distsYval - this._velocYval) + this._velocYval * (time / this._timedelay);\r\n        }\r\n\r\n        if ( next ) {\r\n            this._scrollInt = requestAnimation(this._doScrollTo);\r\n        }\r\n    }\r\n\r\n    else {\r\n        this.scrollX = this._distsXval;\r\n        this.scrollY = this._distsYval;\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._stopAllDelayTimer = function _stopAllDelayTimer() {\r\n    cancelAnimation(this._pullbkInt);\r\n    cancelAnimation(this._scrollInt);\r\n    cancelAnimation(this._bounceInt);\r\n    cancelAnimation(this._tickerInt);\r\n}\r\n\r\n\r\nScrollContainer.prototype._showIndicator = function _showIndicator( type, alpha ) {\r\n    /// 显示/绘制/更新滚动位置指示器。\r\n\r\n    if ( this._disableIndicator ) {\r\n        /// 禁止显示指示器\r\n        return;\r\n    }\r\n\r\n    this._createIndicator();\r\n\r\n    if ( type == 0 && this._scrollXTracker ) {\r\n        if ( alpha == 1 ) {\r\n            this._updateIndicator(type);\r\n            this._scrollXTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n\r\n        else {\r\n            this._scrollXTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n    }\r\n\r\n    if ( type == 1 && this._scrollYTracker ) {\r\n        if ( alpha == 1 ) {\r\n            this._updateIndicator(type);\r\n            this._scrollYTracker.natural.classList.add(\"scroll-track-showing\");\r\n        }\r\n\r\n        else {\r\n            this._scrollYTracker.natural.classList.remove(\"scroll-track-showing\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._createIndicator = function _createIndicator() {\r\n    if ( this.scrollXEnabled && !this._scrollXIndicator ) {\r\n        this._scrollXTracker = new Sprite(document.createElement(\"div\"));\r\n        this._scrollXTracker.natural.className = \"scroll-track scroll-x-track\";\r\n        this._scrollXIndicator = new Sprite(document.createElement(\"div\"));\r\n        this._scrollXIndicator.natural.className = \"scroll-indicator\";\r\n\r\n        this._scrollXTracker.natural.appendChild(this._scrollXIndicator.natural);\r\n        this.natural.appendChild(this._scrollXTracker.natural);\r\n    }\r\n\r\n    if ( this.scrollYEnabled && !this._scrollYIndicator ) {\r\n        this._scrollYTracker = new Sprite(document.createElement(\"div\"));\r\n        this._scrollYTracker.natural.className = \"scroll-track scroll-y-track\";\r\n        this._scrollYIndicator = new Sprite(document.createElement(\"div\"));\r\n        this._scrollYIndicator.natural.className = \"scroll-indicator\";\r\n\r\n        this._scrollYTracker.natural.appendChild(this._scrollYIndicator.natural);\r\n        this.natural.appendChild(this._scrollYTracker.natural);\r\n    }\r\n}\r\n\r\n\r\nScrollContainer.prototype._updateIndicator = function _updateIndicator( type ) {\r\n    if ( type == 0 ) {\r\n        var scale = ((this.viewportWidth <= 0 || this.contentWidth <= 0) ? 0 : this.viewportWidth / this.contentWidth);\r\n        var value = (this.scrollX > 0 ? 0 : this.scrollX < -this.scrollWidth ? this.scrollWidth : -this.scrollX);\r\n        var percent = (this.scrollWidth <= 0 ? (this.scrollY >= 0 ? 0 : 1) : value / this.scrollWidth);\r\n\r\n\r\n        if ( this.resizeIndicator ) {\r\n            var width = this._scrollXTracker.width * scale;\r\n            var flowX = this.scrollX > 0 ? this.scrollX : this.scrollX < -this.scrollWidth ? -this.scrollWidth - this.scrollX : 0;\r\n                flowX = (width <= 0 ? 0 : 1 - Math.min(1, flowX / width)); \r\n\r\n            this._scrollXIndicator.natural.style.width = (width * flowX) + \"px\";\r\n        }\r\n\r\n        this._scrollXIndicator.x = Math.max(0, this._scrollXTracker.width - this._scrollXIndicator.width) * percent;\r\n    }\r\n\r\n    if ( type == 1 ) {\r\n        var scale = ((this.viewportHeight <= 0 || this.contentHeight <= 0) ? 0 : this.viewportHeight / this.contentHeight);\r\n        var value = (this.scrollY > 0 ? 0 : this.scrollY < -this.scrollHeight ? this.scrollHeight : -this.scrollY);\r\n        var percent = (this.scrollHeight <= 0 ? (this.scrollY >= 0 ? 0 : 1) : value / this.scrollHeight);\r\n\r\n\r\n        if ( this.resizeIndicator ) {\r\n            var height = this._scrollYTracker.height * scale;\r\n            var flowY  = this.scrollY > 0 ? this.scrollY : this.scrollY < -this.scrollHeight ? -this.scrollHeight - this.scrollY : 0;\r\n                flowY = (height <= 0 ? 0 : 1 - Math.min(1, flowY / height)); \r\n\r\n            this._scrollYIndicator.natural.style.height = (height * flowY) + \"px\";\r\n        }\r\n\r\n        this._scrollYIndicator.y = Math.max(0, this._scrollYTracker.height - this._scrollYIndicator.height) * percent;\r\n    }\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../core/timing.js' />\r\n/// <reference path='./Sprite.js' />\r\n\r\n\r\nvar FPSRendener = derive(Sprite, function FPSRendener() {\r\n    Sprite.call(this, document.createElement(\"div\"));\r\n\r\n\r\n    this._element.css({\r\n        \"position\": \"fixed\",\r\n        \"left\": \"0px\",\r\n        \"top\" : \"0px\",\r\n        \"color\": \"#04be02\",\r\n        \"padding\": \"0px 4px\",\r\n        \"background\": \"rgba(255, 255, 255, 0.6)\",\r\n        \"zIndex\": 9999999\r\n    });\r\n\r\n    document.body.appendChild(this._natural);\r\n\r\n    this._frameRate = 0;\r\n    this._lastTimer = 0;\r\n    this._currTimer = 0;\r\n    this._updateFrameRateHandler = this._updateFrameRateHandler.bind(this);\r\n\r\n    requestAnimation(this._updateFrameRateHandler);\r\n});\r\n\r\n\r\nFPSRendener.prototype._updateFrameRateHandler = function _updateFrameRateHandler( evt ) {\r\n    /// <summary>\r\n    /// 更新帧频；</summary>\r\n\r\n    this._frameRate++;\r\n    this._currTimer = Date.now();\r\n\r\n    if ( this._currTimer - this._lastTimer >= 1000 ) {\r\n        this._lastTimer = this._currTimer;\r\n        this._updateTextContent();\r\n        this._frameRate = 0;\r\n    }\r\n\r\n    requestAnimation(this._updateFrameRateHandler);\r\n}\r\n\r\n\r\nFPSRendener.prototype._updateTextContent = function _updateTextContent() {\r\n    this._element.text(\"fps:\" + this._frameRate);\r\n}","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='../core/derive.js' />\r\n/// <reference path='../view/Sprite.js' />\r\n/// <reference path='../view/ScrollContainer.js' />\r\n/// <reference path='../view/FPSRendener.js' />\r\n/// <reference path='../utils/URLParams.js' />\r\n\r\n\r\nvar PageBase = derive(Sprite, function PageBase( disableContainer ) {\r\n    Sprite.call(this, document.body);\r\n\r\n    /// 帧频计数器；\r\n    new FPSRendener();\r\n    \r\n    /// Remote Console JS;\r\n    console.log(\"PageBase -> Remote Init: \" + (new Date().toJSON()));\r\n\r\n    /// 全局配置文件；\r\n    this._appConfigParam = domain[\"APP_CONFIG_PARAMS\"] || {};\r\n\r\n    /// URL 参数；\r\n    this._urlParams = new URLParams(location.search);\r\n\r\n\r\n    /// 主滚动容器；\r\n    if ( !disableContainer ) {\r\n        this._mainContainer = new ScrollContainer(\"#main\");\r\n    }\r\n\r\n    /// 页面加载完成；\r\n    document.body.classList.add(\"body-load\");\r\n});\r\n\r\n","/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/// @Copyright ~2015 Samlv9 and other contributors.\r\n/// @MIT-LICENSE | dev-1.0.0 | http://samlv9.com/\r\n/// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n///                                              }|\r\n///                                              }|\r\n///                                              }|     　 へ　　　 ／|    \r\n///      _______     _______         ______      }|      /　│　　 ／ ／\r\n///     /  ___  |   |_   __ \\      .' ____ '.    }|     │　Z ＿,＜　／　　 /`ヽ\r\n///    |  (__ \\_|     | |__) |     | (____) |    }|     │　　　　　ヽ　　 /　　〉\r\n///     '.___`-.      |  __ /      '_.____. |    }|      Y　　　　　`　 /　　/\r\n///    |`\\____) |    _| |  \\ \\_    | \\____| |    }|    ｲ●　､　●　　⊂⊃〈　　/\r\n///    |_______.'   |____| |___|    \\______,'    }|    ()　 v　　　　|　＼〈\r\n///    |=========================================\\|    　>ｰ ､_　 ィ　 │ ／／\r\n///    | LESS IS MORE!                           ||     / へ　　 /　ﾉ＜|＼＼\r\n///    `=========================================/|    ヽ_ﾉ　　(_／　 │／／\r\n///                                              }|     7　　　　　　  |／\r\n///                                              }|     ＞―r￣￣`ｰ―＿`\r\n///                                              }|\r\n///                                              }|\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n/// THE SOFTWARE.\r\n///\r\n/// <reference path='core/derive.js' />\r\n/// <reference path='page/PageBase.js' />\r\n\r\n\r\n\r\nvar Page = derive(PageBase, function Page() {\r\n    PageBase.call(this);\r\n});\r\n"],"sourceRoot":"/source/"}